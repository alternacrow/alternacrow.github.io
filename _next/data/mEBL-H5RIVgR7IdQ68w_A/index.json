{"pageProps":{"user":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false,"name":"Kazuaki Horita","company":null,"blog":"https://alternacrow.github.io","location":"Tokyo, Japan","email":null,"hireable":null,"bio":"I love web development!!","twitter_username":"alternacrow","public_repos":15,"public_gists":0,"followers":4,"following":14,"created_at":"2018-01-06T00:12:52Z","updated_at":"2022-11-23T09:50:10Z"},"products":[],"repositories":[{"id":466614167,"node_id":"R_kgDOG8_3lw","name":"alternacrow.github.io","full_name":"alternacrow/alternacrow.github.io","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/alternacrow.github.io","description":"Home Page","fork":false,"url":"https://api.github.com/repos/alternacrow/alternacrow.github.io","forks_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/forks","keys_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/teams","hooks_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/events","assignees_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/tags","blobs_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/languages","stargazers_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/subscription","commits_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/merges","archive_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/downloads","issues_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/alternacrow.github.io/deployments","created_at":"2022-03-06T02:12:44Z","updated_at":"2022-03-13T12:10:25Z","pushed_at":"2022-12-18T19:11:36Z","git_url":"git://github.com/alternacrow/alternacrow.github.io.git","ssh_url":"git@github.com:alternacrow/alternacrow.github.io.git","clone_url":"https://github.com/alternacrow/alternacrow.github.io.git","svn_url":"https://github.com/alternacrow/alternacrow.github.io","homepage":"https://alternacrow.github.io","size":4212,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"develop"},{"id":413049143,"node_id":"R_kgDOGJ6hNw","name":"prototype-with-typescript","full_name":"alternacrow/prototype-with-typescript","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/prototype-with-typescript","description":null,"fork":false,"url":"https://api.github.com/repos/alternacrow/prototype-with-typescript","forks_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/forks","keys_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/teams","hooks_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/events","assignees_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/tags","blobs_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/languages","stargazers_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/subscription","commits_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/merges","archive_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/downloads","issues_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/prototype-with-typescript/deployments","created_at":"2021-10-03T10:47:21Z","updated_at":"2021-10-03T10:50:42Z","pushed_at":"2021-10-03T10:50:40Z","git_url":"git://github.com/alternacrow/prototype-with-typescript.git","ssh_url":"git@github.com:alternacrow/prototype-with-typescript.git","clone_url":"https://github.com/alternacrow/prototype-with-typescript.git","svn_url":"https://github.com/alternacrow/prototype-with-typescript","homepage":null,"size":4,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":520524812,"node_id":"R_kgDOHwaUDA","name":"suburi-nestjs-graphql-prisma","full_name":"alternacrow/suburi-nestjs-graphql-prisma","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/suburi-nestjs-graphql-prisma","description":null,"fork":false,"url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma","forks_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/forks","keys_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/teams","hooks_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/events","assignees_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/tags","blobs_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/languages","stargazers_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/subscription","commits_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/merges","archive_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/downloads","issues_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/suburi-nestjs-graphql-prisma/deployments","created_at":"2022-08-02T14:10:17Z","updated_at":"2022-08-02T14:10:23Z","pushed_at":"2022-08-02T14:48:38Z","git_url":"git://github.com/alternacrow/suburi-nestjs-graphql-prisma.git","ssh_url":"git@github.com:alternacrow/suburi-nestjs-graphql-prisma.git","clone_url":"https://github.com/alternacrow/suburi-nestjs-graphql-prisma.git","svn_url":"https://github.com/alternacrow/suburi-nestjs-graphql-prisma","homepage":null,"size":16,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit","node_id":"MDc6TGljZW5zZTEz"},"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":523734739,"node_id":"R_kgDOHzeO0w","name":"suburi-terraform-aws","full_name":"alternacrow/suburi-terraform-aws","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/suburi-terraform-aws","description":null,"fork":false,"url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws","forks_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/forks","keys_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/teams","hooks_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/events","assignees_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/tags","blobs_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/languages","stargazers_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/subscription","commits_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/merges","archive_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/downloads","issues_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/suburi-terraform-aws/deployments","created_at":"2022-08-11T13:31:24Z","updated_at":"2022-08-21T14:58:26Z","pushed_at":"2022-08-21T14:58:23Z","git_url":"git://github.com/alternacrow/suburi-terraform-aws.git","ssh_url":"git@github.com:alternacrow/suburi-terraform-aws.git","clone_url":"https://github.com/alternacrow/suburi-terraform-aws.git","svn_url":"https://github.com/alternacrow/suburi-terraform-aws","homepage":null,"size":3,"stargazers_count":0,"watchers_count":0,"language":"HCL","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":315210045,"node_id":"MDEwOlJlcG9zaXRvcnkzMTUyMTAwNDU=","name":"webpack-pug-scss-typescript","full_name":"alternacrow/webpack-pug-scss-typescript","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/webpack-pug-scss-typescript","description":"Site that use webpack, pug, scss, typescript","fork":false,"url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript","forks_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/forks","keys_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/teams","hooks_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/events","assignees_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/tags","blobs_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/languages","stargazers_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/subscription","commits_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/merges","archive_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/downloads","issues_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/webpack-pug-scss-typescript/deployments","created_at":"2020-11-23T05:31:05Z","updated_at":"2021-07-01T11:10:25Z","pushed_at":"2021-02-12T13:02:33Z","git_url":"git://github.com/alternacrow/webpack-pug-scss-typescript.git","ssh_url":"git@github.com:alternacrow/webpack-pug-scss-typescript.git","clone_url":"https://github.com/alternacrow/webpack-pug-scss-typescript.git","svn_url":"https://github.com/alternacrow/webpack-pug-scss-typescript","homepage":"https://alternacrow.github.io/webpack-pug-scss-typescript","size":2995,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":true,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":240646641,"node_id":"MDEwOlJlcG9zaXRvcnkyNDA2NDY2NDE=","name":"TodoAppWithNavigation","full_name":"alternacrow/TodoAppWithNavigation","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/TodoAppWithNavigation","description":"Hands-on with creating a simple Todo App using ReactNative, Expo36, React Navigation5","fork":false,"url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation","forks_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/forks","keys_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/teams","hooks_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/events","assignees_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/tags","blobs_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/languages","stargazers_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/subscription","commits_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/merges","archive_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/downloads","issues_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/TodoAppWithNavigation/deployments","created_at":"2020-02-15T04:50:18Z","updated_at":"2021-01-08T12:17:40Z","pushed_at":"2020-07-19T13:59:38Z","git_url":"git://github.com/alternacrow/TodoAppWithNavigation.git","ssh_url":"git@github.com:alternacrow/TodoAppWithNavigation.git","clone_url":"https://github.com/alternacrow/TodoAppWithNavigation.git","svn_url":"https://github.com/alternacrow/TodoAppWithNavigation","homepage":"","size":513,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":1,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":1,"watchers":0,"default_branch":"master"},{"id":239742774,"node_id":"MDEwOlJlcG9zaXRvcnkyMzk3NDI3NzQ=","name":"TodoApp","full_name":"alternacrow/TodoApp","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/TodoApp","description":"Hands-on with creating a simple Todo App using ReactNative and Expo36","fork":false,"url":"https://api.github.com/repos/alternacrow/TodoApp","forks_url":"https://api.github.com/repos/alternacrow/TodoApp/forks","keys_url":"https://api.github.com/repos/alternacrow/TodoApp/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/TodoApp/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/TodoApp/teams","hooks_url":"https://api.github.com/repos/alternacrow/TodoApp/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/TodoApp/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/TodoApp/events","assignees_url":"https://api.github.com/repos/alternacrow/TodoApp/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/TodoApp/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/TodoApp/tags","blobs_url":"https://api.github.com/repos/alternacrow/TodoApp/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/TodoApp/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/TodoApp/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/TodoApp/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/TodoApp/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/TodoApp/languages","stargazers_url":"https://api.github.com/repos/alternacrow/TodoApp/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/TodoApp/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/TodoApp/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/TodoApp/subscription","commits_url":"https://api.github.com/repos/alternacrow/TodoApp/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/TodoApp/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/TodoApp/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/TodoApp/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/TodoApp/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/TodoApp/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/TodoApp/merges","archive_url":"https://api.github.com/repos/alternacrow/TodoApp/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/TodoApp/downloads","issues_url":"https://api.github.com/repos/alternacrow/TodoApp/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/TodoApp/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/TodoApp/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/TodoApp/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/TodoApp/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/TodoApp/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/TodoApp/deployments","created_at":"2020-02-11T11:11:58Z","updated_at":"2021-01-08T12:14:17Z","pushed_at":"2020-07-19T13:25:41Z","git_url":"git://github.com/alternacrow/TodoApp.git","ssh_url":"git@github.com:alternacrow/TodoApp.git","clone_url":"https://github.com/alternacrow/TodoApp.git","svn_url":"https://github.com/alternacrow/TodoApp","homepage":"","size":420,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":1,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":1,"watchers":0,"default_branch":"master"},{"id":418127551,"node_id":"R_kgDOGOwevw","name":"next-routing-with-typescript","full_name":"alternacrow/next-routing-with-typescript","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/next-routing-with-typescript","description":null,"fork":false,"url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript","forks_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/forks","keys_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/teams","hooks_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/events","assignees_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/tags","blobs_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/languages","stargazers_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/subscription","commits_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/merges","archive_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/downloads","issues_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/next-routing-with-typescript/deployments","created_at":"2021-10-17T12:40:33Z","updated_at":"2022-03-06T02:09:57Z","pushed_at":"2021-10-24T08:46:27Z","git_url":"git://github.com/alternacrow/next-routing-with-typescript.git","ssh_url":"git@github.com:alternacrow/next-routing-with-typescript.git","clone_url":"https://github.com/alternacrow/next-routing-with-typescript.git","svn_url":"https://github.com/alternacrow/next-routing-with-typescript","homepage":null,"size":76,"stargazers_count":0,"watchers_count":0,"language":"TypeScript","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":403508767,"node_id":"MDEwOlJlcG9zaXRvcnk0MDM1MDg3Njc=","name":"Husky7AndLintStaged","full_name":"alternacrow/Husky7AndLintStaged","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/Husky7AndLintStaged","description":null,"fork":false,"url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged","forks_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/forks","keys_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/teams","hooks_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/events","assignees_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/tags","blobs_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/languages","stargazers_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/subscription","commits_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/merges","archive_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/downloads","issues_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/Husky7AndLintStaged/deployments","created_at":"2021-09-06T06:22:51Z","updated_at":"2022-03-06T02:10:30Z","pushed_at":"2021-09-06T06:23:03Z","git_url":"git://github.com/alternacrow/Husky7AndLintStaged.git","ssh_url":"git@github.com:alternacrow/Husky7AndLintStaged.git","clone_url":"https://github.com/alternacrow/Husky7AndLintStaged.git","svn_url":"https://github.com/alternacrow/Husky7AndLintStaged","homepage":null,"size":269,"stargazers_count":0,"watchers_count":0,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"},{"id":401020469,"node_id":"MDEwOlJlcG9zaXRvcnk0MDEwMjA0Njk=","name":"ExistingReactNativeWithExpoNotifications","full_name":"alternacrow/ExistingReactNativeWithExpoNotifications","private":false,"owner":{"login":"alternacrow","id":35155361,"node_id":"MDQ6VXNlcjM1MTU1MzYx","avatar_url":"https://avatars.githubusercontent.com/u/35155361?v=4","gravatar_id":"","url":"https://api.github.com/users/alternacrow","html_url":"https://github.com/alternacrow","followers_url":"https://api.github.com/users/alternacrow/followers","following_url":"https://api.github.com/users/alternacrow/following{/other_user}","gists_url":"https://api.github.com/users/alternacrow/gists{/gist_id}","starred_url":"https://api.github.com/users/alternacrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alternacrow/subscriptions","organizations_url":"https://api.github.com/users/alternacrow/orgs","repos_url":"https://api.github.com/users/alternacrow/repos","events_url":"https://api.github.com/users/alternacrow/events{/privacy}","received_events_url":"https://api.github.com/users/alternacrow/received_events","type":"User","site_admin":false},"html_url":"https://github.com/alternacrow/ExistingReactNativeWithExpoNotifications","description":"ExistingReactNativeWithExpoNotifications","fork":false,"url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications","forks_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/forks","keys_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/keys{/key_id}","collaborators_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/teams","hooks_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/hooks","issue_events_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/issues/events{/number}","events_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/events","assignees_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/assignees{/user}","branches_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/branches{/branch}","tags_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/tags","blobs_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/git/refs{/sha}","trees_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/git/trees{/sha}","statuses_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/statuses/{sha}","languages_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/languages","stargazers_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/stargazers","contributors_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/contributors","subscribers_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/subscribers","subscription_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/subscription","commits_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/commits{/sha}","git_commits_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/git/commits{/sha}","comments_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/comments{/number}","issue_comment_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/issues/comments{/number}","contents_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/contents/{+path}","compare_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/compare/{base}...{head}","merges_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/merges","archive_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/downloads","issues_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/issues{/number}","pulls_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/pulls{/number}","milestones_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/milestones{/number}","notifications_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/labels{/name}","releases_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/releases{/id}","deployments_url":"https://api.github.com/repos/alternacrow/ExistingReactNativeWithExpoNotifications/deployments","created_at":"2021-08-29T11:06:43Z","updated_at":"2022-03-06T02:06:38Z","pushed_at":"2021-09-05T06:26:20Z","git_url":"git://github.com/alternacrow/ExistingReactNativeWithExpoNotifications.git","ssh_url":"git@github.com:alternacrow/ExistingReactNativeWithExpoNotifications.git","clone_url":"https://github.com/alternacrow/ExistingReactNativeWithExpoNotifications.git","svn_url":"https://github.com/alternacrow/ExistingReactNativeWithExpoNotifications","homepage":null,"size":434,"stargazers_count":0,"watchers_count":0,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":true,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"public","forks":0,"open_issues":0,"watchers":0,"default_branch":"main"}],"gists":[],"qiitaArticles":[{"rendered_body":"<p data-sourcepos=\"1:1-1:67\">この記事は207 Advent Calendar 2022 19日目 の記事です。</p>\n<h3 data-sourcepos=\"3:1-3:16\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h3>\n<p data-sourcepos=\"5:1-8:207\">11月から207でフロントエンドエンジニアをしているalternacrowです。<br>\nここ１ヶ月ほど業務の片手間でSentryに投げたエラーとソースマップがうまく紐付かない問題の調査をしていました。<br>\nアプリはExpo Bare Workflowで開発しており、いつからかSentryのエラーに該当コードが表示されない状態になっていました。<br>\nSentryについては公式に書いてあるとおり設定する程度の経験しかなく、深堀りする機会も無かったので色々と調査したことを備忘録も兼ねてまとめます。</p>\n<h3 data-sourcepos=\"10:1-10:22\">\n<span id=\"設定について\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>設定について</h3>\n<p data-sourcepos=\"12:1-12:81\">基本的には公式のとおりに設定していけば間違い無いです。</p>\n<p data-sourcepos=\"14:1-16:107\">Bare React Native: <a href=\"https://docs.sentry.io/platforms/react-native/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.sentry.io/platforms/react-native/</a><br>\nExpo(Bare/Managed): <a href=\"https://docs.expo.dev/guides/using-sentry/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.expo.dev/guides/using-sentry/</a><br>\nマニュアルセットアップ: <a href=\"https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/</a></p>\n<p data-sourcepos=\"18:1-18:168\">Expo Managed Workflowは特に迷うこともなく、sentry-expoと依存関係をインストールし、expo.hooks.postPublishの設定を追加するだけです。</p>\n<p data-sourcepos=\"20:1-21:226\">Bare React NativeやExpo Bare Workflowの場合はsentry-wizardの実行以外にもマニュアルセットアップが必要になります。<br>\n特にAndroidは<a href=\"https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/#enable-gradle-integration\" rel=\"nofollow noopener\" target=\"_blank\">この設定</a>が無いとソースマップがアップロードされないため、注意が必要です。</p>\n<div class=\"code-frame\" data-lang=\"gradle\" data-sourcepos=\"22:1-25:3\"><div class=\"highlight\"><pre><code><span class=\"c1\">// android/app/build.gradle</span>\n<span class=\"n\">apply</span> <span class=\"nl\">from:</span> <span class=\"s2\">\"../../node_modules/@sentry/react-native/sentry.gradle\"</span>\n</code></pre></div></div>\n<p data-sourcepos=\"27:1-28:91\">Bare React Nativeの場合は上記の設定でビルド時にソースマップがアップロードされるようになります。<br>\nExpoのようにOTAが無いので他に気にすることが無いのが良いですね。</p>\n<p data-sourcepos=\"30:1-30:255\">Expo Bare Workflowについては、sentry-wizardやマニュアルセットアップ以外はsentry-expoをそのまま利用できますし、OTAにexpo publishを利用していればapp.jsonのexpo.hooks.postPublishもそのまま利用できます。</p>\n<p data-sourcepos=\"32:1-34:152\">もし、releaseやdistributionの指定を行いたい場合は、<code>SENTRY_RELEASE</code>と<code>SENTRY_DIST</code>の環境変数を利用できます。<br>\n（expo.hooks.postPublishにもrelease、distributionは設定可能）<br>\nExpo/EASのリリースチャンネルやアプリバージョンと合わせておくと紐付きが分かりやすくて良いかもしれません。</p>\n<h3 data-sourcepos=\"36:1-36:19\">\n<span id=\"easによるota\" class=\"fragment\"></span><a href=\"#eas%E3%81%AB%E3%82%88%E3%82%8Bota\"><i class=\"fa fa-link\"></i></a>EASによるOTA</h3>\n<p data-sourcepos=\"38:1-40:223\">Expoのbuild/publishはEASのbuild/updateへの移行を推奨しているようです。<br>\n(eas.jsonにeas update用の設定があると、expo publishでeas updateを使えと怒られる）<br>\nEASへの移行は、channelとbranchの紐付けやランタイムバージョンについて理解しておく必要はありますが、複雑なことをしようとしなければ難しいことは無さそうです。</p>\n<p data-sourcepos=\"42:1-44:77\">ただ、app.jsonのexpo.hooks.postPublishはexpo publishをした場合にhookされるものなので、eas updateではhookしないため対応が必要になります。<br>\n（Expo Managedのeas buildはexpo.hooks.postPublishで対応してくれる）<br>\n<a href=\"https://docs.expo.dev/guides/using-sentry/#uploading-sourcemaps-at-build-time\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.expo.dev/guides/using-sentry/#uploading-sourcemaps-at-build-time</a></p>\n<p data-sourcepos=\"46:1-46:172\">eas update時にバンドルされたファイルがdist/bundles配下に設置されるので、下記のようなスクリプトでsentryにアップロードします。</p>\n<div class=\"code-frame\" data-lang=\"shell\" data-sourcepos=\"48:1-69:3\"><div class=\"highlight\"><pre><code><span class=\"nb\">cd</span> <span class=\"nv\">$_PROJECT_ROOT</span>/dist/bundles\n\n<span class=\"nb\">cp </span>ios-<span class=\"k\">*</span>.js      <span class=\"nv\">$_IOS_BUNDLE</span>\n<span class=\"nb\">cp </span>ios-<span class=\"k\">*</span>.map     <span class=\"nv\">$_IOS_BUNDLE_MAP</span>\n<span class=\"nb\">cp </span>android-<span class=\"k\">*</span>.js  <span class=\"nv\">$_ANDROID_BUNDLE</span>\n<span class=\"nb\">cp </span>android-<span class=\"k\">*</span>.map <span class=\"nv\">$_ANDROID_BUNDLE_MAP</span>\n\n<span class=\"nv\">SENTRY_PROPERTIES</span><span class=\"o\">=</span>sentry.properties <span class=\"se\">\\ </span><span class=\"c\"># orgやproject,auth.tokenを設定する</span>\nnpx sentry-cli releases <span class=\"se\">\\</span>\n  files <span class=\"nv\">$_IOS_RELEASE</span> <span class=\"se\">\\</span>\n  upload-sourcemaps <span class=\"se\">\\</span>\n  <span class=\"nt\">--dist</span> <span class=\"nv\">$_IOS_DISTRIBUTION</span> <span class=\"se\">\\</span>\n  <span class=\"nv\">$_IOS_BUNDLE</span> <span class=\"nv\">$_IOS_BUNDLE_MAP</span>\n\n<span class=\"nv\">SENTRY_PROPERTIES</span><span class=\"o\">=</span>sentry.properties <span class=\"se\">\\</span>\nnpx sentry-cli releases <span class=\"se\">\\</span>\n  files <span class=\"nv\">$_ANDROID_RELEASE</span> <span class=\"se\">\\</span>\n  upload-sourcemaps <span class=\"se\">\\</span>\n  <span class=\"nt\">--dist</span> <span class=\"nv\">$_ANDROID_DISTRIBUTION</span> <span class=\"se\">\\</span>\n  <span class=\"nv\">$_ANDROID_BUNDLE</span> <span class=\"nv\">$_ANDROID_BUNDLE_MAP</span>\n</code></pre></div></div>\n<p data-sourcepos=\"71:1-72:57\">クライアントでSentryの初期化時にreleaseとdistributionの指定をしていない場合、発行される iOS/Android Update IDをdistributionに指定する必要があります。<br>\n詳細はドキュメントを確認してください。</p>\n<h3 data-sourcepos=\"74:1-74:46\">\n<span id=\"手動でソースマップを作成する\" class=\"fragment\"></span><a href=\"#%E6%89%8B%E5%8B%95%E3%81%A7%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%83%E3%83%97%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>手動でソースマップを作成する</h3>\n<p data-sourcepos=\"76:1-76:276\">ブラックボックスだとよく分かんないし、ソースマップ作成/アップロードのスクリプトを作ってCI/CDに設定すればコントロール出来てみんな幸せじゃん、そんなふうに考えていた時期が俺にもありました。</p>\n<p data-sourcepos=\"78:1-79:57\">手動バンドルについては公式に記載されています。<br>\n<a href=\"https://docs.sentry.io/platforms/react-native/sourcemaps/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.sentry.io/platforms/react-native/sourcemaps/</a></p>\n<p data-sourcepos=\"81:1-84:66\">しかし、OTA時のソースマップについては勝手が違うようで、手動バンドルしたものでは機能しませんでした。<br>\n（※ビルド時のソースマップについてはドキュメント記載の手順で動作確認できた。）<br>\n現在公式では手動でソースマップをバンドルするのは非推奨としています。<br>\n<a href=\"https://docs.sentry.io/platforms/react-native/manual-setup/hermes/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://docs.sentry.io/platforms/react-native/manual-setup/hermes/</a></p>\n<blockquote data-sourcepos=\"85:1-85:242\">\n<p data-sourcepos=\"85:3-85:242\">Currently, there is an issue when bundling the hermes bundle and source maps manually. We recommend not bundling these manually until this is fixed. Follow the <a href=\"https://github.com/facebook/react-native/issues/34043\" rel=\"nofollow noopener\" target=\"_blank\">issue</a> for more details.</p>\n</blockquote>\n<p data-sourcepos=\"87:1-88:78\">これに気づかず、今回の調査では大半の時間をここで無駄にしたように思います。<br>\nはじめにドキュメントを隅から隅まで読む、大事ですね。</p>\n<p data-sourcepos=\"90:1-90:241\">余談ですが、下記のようにbundleのオプションに<code>--sourcemap-sources-root</code>のオプションを指定すれば、sentry-cliでアップロードする際に<code>--strip-prefix</code>でパスを調整する必要も無くなります。</p>\n<div class=\"code-frame\" data-lang=\"shell\" data-sourcepos=\"92:1-102:3\"><div class=\"highlight\"><pre><code>npx react-native bundle <span class=\"se\">\\</span>\n<span class=\"nt\">--platform</span> ios <span class=\"se\">\\</span>\n<span class=\"nt\">--dev</span> <span class=\"nb\">false</span> <span class=\"se\">\\</span>\n<span class=\"nt\">--entry-file</span> index.js <span class=\"se\">\\</span>\n<span class=\"nt\">--sourcemap-sources-root</span> /path/to/project/root <span class=\"se\">\\</span>\n<span class=\"nt\">--reset-cache</span> <span class=\"se\">\\</span>\n<span class=\"nt\">--bundle-output</span> main.jsbundle <span class=\"se\">\\</span>\n<span class=\"nt\">--sourcemap-output</span> main.jsbundle.map <span class=\"se\">\\</span>\n<span class=\"nt\">--minify</span> <span class=\"nb\">true</span>\n</code></pre></div></div>\n<h3 data-sourcepos=\"104:1-104:16\">\n<span id=\"さいごに\" class=\"fragment\"></span><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"><i class=\"fa fa-link\"></i></a>さいごに</h3>\n<p data-sourcepos=\"106:1-108:90\">207株式会社では、配達員向け効率化アプリ「TODOCUサポーター」や配送管理システム「TODOCUクラウド」を開発しています。<br>\n207では開発メンバーを大絶賛募集中です<img alt=\":thumbsup:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f44d.png\" title=\":thumbsup:\" width=\"20\" loading=\"lazy\"><br>\nもし少しでもご興味がありましたら以下のnotionをご覧ください<img alt=\":pray:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f64f.png\" title=\":pray:\" width=\"20\" loading=\"lazy\"></p>\n<p data-sourcepos=\"110:1-110:34\"><qiita-embed-ogp src=\"https://207-inc.super.site/recruit\"></qiita-embed-ogp></p>\n<p data-sourcepos=\"112:1-112:26\"><qiita-embed-ogp src=\"https://207-inc.super.site\"></qiita-embed-ogp></p>\n","body":"この記事は207 Advent Calendar 2022 19日目 の記事です。\n\n### はじめに\n\n11月から207でフロントエンドエンジニアをしているalternacrowです。\nここ１ヶ月ほど業務の片手間でSentryに投げたエラーとソースマップがうまく紐付かない問題の調査をしていました。\nアプリはExpo Bare Workflowで開発しており、いつからかSentryのエラーに該当コードが表示されない状態になっていました。\nSentryについては公式に書いてあるとおり設定する程度の経験しかなく、深堀りする機会も無かったので色々と調査したことを備忘録も兼ねてまとめます。\n\n### 設定について\n\n基本的には公式のとおりに設定していけば間違い無いです。\n\nBare React Native: https://docs.sentry.io/platforms/react-native/\nExpo(Bare/Managed): https://docs.expo.dev/guides/using-sentry/\nマニュアルセットアップ: https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/\n\nExpo Managed Workflowは特に迷うこともなく、sentry-expoと依存関係をインストールし、expo.hooks.postPublishの設定を追加するだけです。\n\nBare React NativeやExpo Bare Workflowの場合はsentry-wizardの実行以外にもマニュアルセットアップが必要になります。\n特にAndroidは[この設定](https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/#enable-gradle-integration)が無いとソースマップがアップロードされないため、注意が必要です。\n```gradle\n// android/app/build.gradle\napply from: \"../../node_modules/@sentry/react-native/sentry.gradle\"\n```\n\nBare React Nativeの場合は上記の設定でビルド時にソースマップがアップロードされるようになります。\nExpoのようにOTAが無いので他に気にすることが無いのが良いですね。\n\nExpo Bare Workflowについては、sentry-wizardやマニュアルセットアップ以外はsentry-expoをそのまま利用できますし、OTAにexpo publishを利用していればapp.jsonのexpo.hooks.postPublishもそのまま利用できます。\n\nもし、releaseやdistributionの指定を行いたい場合は、`SENTRY_RELEASE`と`SENTRY_DIST`の環境変数を利用できます。\n（expo.hooks.postPublishにもrelease、distributionは設定可能）\nExpo/EASのリリースチャンネルやアプリバージョンと合わせておくと紐付きが分かりやすくて良いかもしれません。\n\n### EASによるOTA\n\nExpoのbuild/publishはEASのbuild/updateへの移行を推奨しているようです。\n(eas.jsonにeas update用の設定があると、expo publishでeas updateを使えと怒られる）\nEASへの移行は、channelとbranchの紐付けやランタイムバージョンについて理解しておく必要はありますが、複雑なことをしようとしなければ難しいことは無さそうです。\n\nただ、app.jsonのexpo.hooks.postPublishはexpo publishをした場合にhookされるものなので、eas updateではhookしないため対応が必要になります。\n（Expo Managedのeas buildはexpo.hooks.postPublishで対応してくれる）\nhttps://docs.expo.dev/guides/using-sentry/#uploading-sourcemaps-at-build-time\n\neas update時にバンドルされたファイルがdist/bundles配下に設置されるので、下記のようなスクリプトでsentryにアップロードします。\n\n```shell\ncd $_PROJECT_ROOT/dist/bundles\n\ncp ios-*.js      $_IOS_BUNDLE\ncp ios-*.map     $_IOS_BUNDLE_MAP\ncp android-*.js  $_ANDROID_BUNDLE\ncp android-*.map $_ANDROID_BUNDLE_MAP\n\nSENTRY_PROPERTIES=sentry.properties \\ # orgやproject,auth.tokenを設定する\nnpx sentry-cli releases \\\n  files $_IOS_RELEASE \\\n  upload-sourcemaps \\\n  --dist $_IOS_DISTRIBUTION \\\n  $_IOS_BUNDLE $_IOS_BUNDLE_MAP\n\nSENTRY_PROPERTIES=sentry.properties \\\nnpx sentry-cli releases \\\n  files $_ANDROID_RELEASE \\\n  upload-sourcemaps \\\n  --dist $_ANDROID_DISTRIBUTION \\\n  $_ANDROID_BUNDLE $_ANDROID_BUNDLE_MAP\n```\n\nクライアントでSentryの初期化時にreleaseとdistributionの指定をしていない場合、発行される iOS/Android Update IDをdistributionに指定する必要があります。\n詳細はドキュメントを確認してください。\n\n### 手動でソースマップを作成する\n\nブラックボックスだとよく分かんないし、ソースマップ作成/アップロードのスクリプトを作ってCI/CDに設定すればコントロール出来てみんな幸せじゃん、そんなふうに考えていた時期が俺にもありました。\n\n手動バンドルについては公式に記載されています。\nhttps://docs.sentry.io/platforms/react-native/sourcemaps/\n\nしかし、OTA時のソースマップについては勝手が違うようで、手動バンドルしたものでは機能しませんでした。\n（※ビルド時のソースマップについてはドキュメント記載の手順で動作確認できた。）\n現在公式では手動でソースマップをバンドルするのは非推奨としています。\nhttps://docs.sentry.io/platforms/react-native/manual-setup/hermes/\n> Currently, there is an issue when bundling the hermes bundle and source maps manually. We recommend not bundling these manually until this is fixed. Follow the [issue](https://github.com/facebook/react-native/issues/34043) for more details.\n\nこれに気づかず、今回の調査では大半の時間をここで無駄にしたように思います。\nはじめにドキュメントを隅から隅まで読む、大事ですね。\n\n余談ですが、下記のようにbundleのオプションに`--sourcemap-sources-root`のオプションを指定すれば、sentry-cliでアップロードする際に`--strip-prefix`でパスを調整する必要も無くなります。\n\n```shell\nnpx react-native bundle \\\n--platform ios \\\n--dev false \\\n--entry-file index.js \\\n--sourcemap-sources-root /path/to/project/root \\\n--reset-cache \\\n--bundle-output main.jsbundle \\\n--sourcemap-output main.jsbundle.map \\\n--minify true\n```\n\n### さいごに\n\n207株式会社では、配達員向け効率化アプリ「TODOCUサポーター」や配送管理システム「TODOCUクラウド」を開発しています。\n207では開発メンバーを大絶賛募集中です:+1:\nもし少しでもご興味がありましたら以下のnotionをご覧ください:pray:\n\nhttps://207-inc.super.site/recruit\n\nhttps://207-inc.super.site\n\n","coediting":false,"comments_count":0,"created_at":"2022-12-17T20:56:09+09:00","group":null,"id":"aafc0c60042bcba31bbc","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"sentry","versions":[]},{"name":"react-native","versions":[]},{"name":"expo","versions":[]}],"title":"ReactNativeでSentryのソースマップを利用する","updated_at":"2022-12-19T07:01:52+09:00","url":"https://qiita.com/alternacrow/items/aafc0c60042bcba31bbc","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-4:99\"><a href=\"https://qiita.com/alternacrow/private/fc2e5ea3168ed90a5f4f\" id=\"reference-5586836a2fb4108c6f18\">前回書いた記事</a>で、FlashListはRecyclerListViewの機能であるセルリサイクリングを使用していることが分かりました。<br>\n今回はその機能が実際にどのように作用しているのか確認していきます。</p>\n<h2 data-sourcepos=\"6:1-6:30\">\n<span id=\"実際に動かしてみる\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B\"><i class=\"fa fa-link\"></i></a>実際に動かしてみる</h2>\n<p data-sourcepos=\"8:1-9:124\">コードは<a href=\"https://snack.expo.dev/@kazuaki.horita/suburi-flash-list-1\" rel=\"nofollow noopener\" target=\"_blank\">こちら</a>。<br>\nスマホアプリの<a href=\"https://expo.dev/client\" rel=\"nofollow noopener\" target=\"_blank\">Expo Go</a>を使えば、実機で動作を確認することが出来ます。</p>\n<p data-sourcepos=\"11:1-11:51\">以下は簡略化したコードになります。</p>\n<div class=\"code-frame\" data-lang=\"react\" data-sourcepos=\"13:1-49:3\"><div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">App</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"nx\">useMemo</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">generateRandomColorList</span><span class=\"p\">(),</span> <span class=\"p\">[]);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">renderItem</span> <span class=\"o\">=</span> <span class=\"nx\">useCallback</span><span class=\"p\">(</span>\n    <span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"p\">&lt;</span><span class=\"nc\">ListItem</span> <span class=\"na\">item</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"si\">}</span> <span class=\"p\">/&gt;;</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">[</span><span class=\"nx\">width</span><span class=\"p\">]</span>\n  <span class=\"p\">);</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"p\">&lt;</span><span class=\"nc\">FlashList</span>\n      <span class=\"na\">data</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">data</span><span class=\"si\">}</span>\n      <span class=\"na\">renderItem</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">renderItem</span><span class=\"si\">}</span>\n      <span class=\"na\">pagingEnabled</span>\n      <span class=\"na\">horizontal</span>\n    <span class=\"p\">/&gt;</span>\n  <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">ListItem</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">visibleIcon</span><span class=\"p\">,</span> <span class=\"nx\">setVisibleIcon</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">handlePress</span> <span class=\"o\">=</span> <span class=\"nx\">useCallback</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">setVisibleIcon</span><span class=\"p\">((</span><span class=\"nx\">prev</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"o\">!</span><span class=\"nx\">prev</span><span class=\"p\">);</span>\n  <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"p\">&lt;</span><span class=\"nc\">ScrollView</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">color</span> <span class=\"p\">}</span><span class=\"si\">}</span><span class=\"p\">&gt;</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">color</span><span class=\"si\">}</span><span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nc\">Button</span> <span class=\"na\">title</span><span class=\"p\">=</span><span class=\"s\">\"Press\"</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handlePress</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span>\n      <span class=\"si\">{</span><span class=\"nx\">visibleIcon</span> <span class=\"p\">?</span> <span class=\"p\">&lt;</span><span class=\"nc\">ThumbsUpIcon</span> <span class=\"p\">/&gt;</span> <span class=\"p\">:</span> <span class=\"kc\">null</span><span class=\"si\">}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nc\">ScrollView</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre></div></div>\n<p data-sourcepos=\"51:1-54:66\">FlashListで使用するdataは、300個のランダムなカラーコードの配列です。<br>\ndataのカラーコードを受け取ってレンダリングされるアイテムコンポーネントでは、内部でScrollViewを使用しており縦スクロールが可能です。<br>\nまた、[Press]ボタンを押すと <img alt=\":thumbsup:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f44d.png\" title=\":thumbsup:\" width=\"20\" loading=\"lazy\"> がボタン下に表示されるように、アイテムコンポーネント内でvisibleIconというstateを宣言しています。<br>\nなにはともあれ、実際の挙動を見てみましょう。</p>\n<p data-sourcepos=\"56:1-56:134\"><a href=\"https://camo.qiitausercontent.com/664fd210368a045bd655c01fdea2f44902ff9458/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3638343637392f35353331326335352d336566652d336331322d363064642d6436346534663661376138632e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F684679%2F55312c55-3efe-3c12-60dd-d64e4f6a7a8c.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=77a048de9c6beef9533324566619e847\" alt=\"ezgif-3-0a073164fa.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/684679/55312c55-3efe-3c12-60dd-d64e4f6a7a8c.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F684679%2F55312c55-3efe-3c12-60dd-d64e4f6a7a8c.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=0d2f84059cbfccdef31735d739f6ecf8 1x\" loading=\"lazy\"></a></p>\n<p data-sourcepos=\"58:1-60:218\">最初のページでは最下部へスクロールし、2つめのページではボタンを押して <img alt=\":thumbsup:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f44d.png\" title=\":thumbsup:\" width=\"20\" loading=\"lazy\"> を表示しました。<br>\nその後横スクロールを続けていくと、カラーコードは異なるものの、スクロール済みのページや<img alt=\":thumbsup:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f44d.png\" title=\":thumbsup:\" width=\"20\" loading=\"lazy\">が表示されているページが何度も繰り返されています。<br>\nFlatListではこのような現象は起きないのですが、FlashListではビューポートから外れるコンポーネントを再利用して表示しているため、このような挙動が起きます。</p>\n<h2 data-sourcepos=\"62:1-62:30\">\n<span id=\"どう対応していくか\" class=\"fragment\"></span><a href=\"#%E3%81%A9%E3%81%86%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%A6%E3%81%84%E3%81%8F%E3%81%8B\"><i class=\"fa fa-link\"></i></a>どう対応していくか</h2>\n<p data-sourcepos=\"64:1-64:51\">主な対応策としては下記になります。</p>\n<ol data-sourcepos=\"65:1-67:0\">\n<li data-sourcepos=\"65:1-65:89\">アイテムコンポーネント内でStateを持たず、外部から注入する。</li>\n<li data-sourcepos=\"66:1-67:0\">propsから渡されるitemの変更を検知してコンポーネントの状態やStateを初期化する。</li>\n</ol>\n<h3 data-sourcepos=\"68:1-68:93\">\n<span id=\"1-アイテムコンポーネント内でstateを持たず外部から注入する\" class=\"fragment\"></span><a href=\"#1-%E3%82%A2%E3%82%A4%E3%83%86%E3%83%A0%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E5%86%85%E3%81%A7state%E3%82%92%E6%8C%81%E3%81%9F%E3%81%9A%E5%A4%96%E9%83%A8%E3%81%8B%E3%82%89%E6%B3%A8%E5%85%A5%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>1. アイテムコンポーネント内でStateを持たず、外部から注入する。</h3>\n<p data-sourcepos=\"70:1-72:86\">この対応はシンプルで、親コンポーネントでStateの管理を行います。<br>\n今回の例では、カラーコードの配列のみを扱っているdataの各アイテムデータに対してvisibleIconのプロパティを追加することになります。<br>\nhandlePressなどのhandlerはextraDataというpropsに渡す方法もあります。</p>\n<h3 data-sourcepos=\"74:1-74:117\">\n<span id=\"2-propsから渡されるitemの変更を検知してコンポーネントの状態やstateを初期化する\" class=\"fragment\"></span><a href=\"#2-props%E3%81%8B%E3%82%89%E6%B8%A1%E3%81%95%E3%82%8C%E3%82%8Bitem%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E6%A4%9C%E7%9F%A5%E3%81%97%E3%81%A6%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E7%8A%B6%E6%85%8B%E3%82%84state%E3%82%92%E5%88%9D%E6%9C%9F%E5%8C%96%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>2. propsから渡されるitemの変更を検知してコンポーネントの状態やStateを初期化する。</h3>\n<p data-sourcepos=\"76:1-77:42\">このパターンでは、refやグローバル変数などを使用してitemの変更を検知し、初期化を行います。<br>\n例えば下記のような実装です。</p>\n<div class=\"code-frame\" data-lang=\"react\" data-sourcepos=\"79:1-98:3\"><div class=\"highlight\"><pre><code><span class=\"kd\">const</span> <span class=\"nx\">ListItem</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">scrollViewRef</span> <span class=\"o\">=</span> <span class=\"nx\">useRef</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">);</span>\n  <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">visibleIcon</span><span class=\"p\">,</span> <span class=\"nx\">setVisibleIcon</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">lastItemKey</span> <span class=\"o\">=</span> <span class=\"nx\">useRef</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">key</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">key</span> <span class=\"o\">!==</span> <span class=\"nx\">lastItemKey</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">lastItemKey</span><span class=\"p\">.</span><span class=\"nx\">current</span> <span class=\"o\">=</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">key</span><span class=\"p\">;</span>\n    <span class=\"nx\">setVisibleIcon</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">scrollViewRef</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">?.</span><span class=\"nx\">scrollTo</span><span class=\"p\">({</span><span class=\"na\">x</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"na\">y</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"na\">animated</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"p\">...</span>\n<span class=\"err\">　</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"p\">&lt;</span><span class=\"nc\">ScrollView</span>\n      <span class=\"na\">ref</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">scrollViewRef</span><span class=\"si\">}</span>\n      <span class=\"err\">...</span>\n    <span class=\"p\">/&gt;</span>\n</code></pre></div></div>\n<p data-sourcepos=\"100:1-101:272\">refで変更前のitemを保持することでpropsから渡されるitemと比較し、<br>\n異なるitemが渡される（コンポーネントがリサイクルされる）タイミングで、visiableIconとScrollViewのスクロール状態を初期化することで、コンポーネントのリサイクルが起きていないように見せています。</p>\n<p data-sourcepos=\"103:1-105:83\">業務などで対応する場合には、1と2を合わせて対応するケースが多くなりそうですね。<br>\nついでに実際に対応してみた挙動も見てみましょう。<br>\nコードは<a href=\"https://snack.expo.dev/@kazuaki.horita/suburi-flash-list-2\" rel=\"nofollow noopener\" target=\"_blank\">こちら</a></p>\n<p data-sourcepos=\"107:1-107:134\"><a href=\"https://camo.qiitausercontent.com/0bead73c7d0f177d8b88614fdb521f601c14bf9c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e61702d6e6f727468656173742d312e616d617a6f6e6177732e636f6d2f302f3638343637392f66623930623061382d666162332d313337312d636331642d3938623366623265656539392e676966\" target=\"_blank\" rel=\"nofollow noopener\"><img src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F684679%2Ffb90b0a8-fab3-1371-cc1d-98b3fb2eee99.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;s=eab4dd42c56f4f4275086d43e94ee322\" alt=\"ezgif-4-80b3f37cd7.gif\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/684679/fb90b0a8-fab3-1371-cc1d-98b3fb2eee99.gif\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F684679%2Ffb90b0a8-fab3-1371-cc1d-98b3fb2eee99.gif?ixlib=rb-4.0.0&amp;auto=format&amp;gif-q=60&amp;q=75&amp;w=1400&amp;fit=max&amp;s=90530bf81c6d9307c05ca5d3c28b713e 1x\" loading=\"lazy\"></a></p>\n","body":"## はじめに\n\n[前回書いた記事](https://qiita.com/alternacrow/private/fc2e5ea3168ed90a5f4f)で、FlashListはRecyclerListViewの機能であるセルリサイクリングを使用していることが分かりました。\n今回はその機能が実際にどのように作用しているのか確認していきます。\n\n## 実際に動かしてみる\n\nコードは[こちら](https://snack.expo.dev/@kazuaki.horita/suburi-flash-list-1)。\nスマホアプリの[Expo Go](https://expo.dev/client)を使えば、実機で動作を確認することが出来ます。\n\n以下は簡略化したコードになります。\n\n```react\nconst App = () => {\n  const data = useMemo(() => generateRandomColorList(), []);\n\n  const renderItem = useCallback(\n    ({ item }) => {\n      return <ListItem item={item} />;\n    },\n    [width]\n  );\n\n  return (\n    <FlashList\n      data={data}\n      renderItem={renderItem}\n      pagingEnabled\n      horizontal\n    />\n  );\n};\n\nconst ListItem = ({ item }) => {\n  const [visibleIcon, setVisibleIcon] = useState(false);\n\n  const handlePress = useCallback(() => {\n    setVisibleIcon((prev) => !prev);\n  }, []);\n\n  return (\n    <ScrollView>\n      <Text style={{ color: item.color }}>{item.color}</Text>\n      <Button title=\"Press\" onPress={handlePress} />\n      {visibleIcon ? <ThumbsUpIcon /> : null}\n    </ScrollView>\n  );\n};\n```\n\nFlashListで使用するdataは、300個のランダムなカラーコードの配列です。\ndataのカラーコードを受け取ってレンダリングされるアイテムコンポーネントでは、内部でScrollViewを使用しており縦スクロールが可能です。\nまた、[Press]ボタンを押すと :+1: がボタン下に表示されるように、アイテムコンポーネント内でvisibleIconというstateを宣言しています。\nなにはともあれ、実際の挙動を見てみましょう。\n\n![ezgif-3-0a073164fa.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/684679/55312c55-3efe-3c12-60dd-d64e4f6a7a8c.gif)\n\n最初のページでは最下部へスクロールし、2つめのページではボタンを押して :+1: を表示しました。\nその後横スクロールを続けていくと、カラーコードは異なるものの、スクロール済みのページや:+1:が表示されているページが何度も繰り返されています。\nFlatListではこのような現象は起きないのですが、FlashListではビューポートから外れるコンポーネントを再利用して表示しているため、このような挙動が起きます。\n\n## どう対応していくか\n\n主な対応策としては下記になります。\n1. アイテムコンポーネント内でStateを持たず、外部から注入する。\n2. propsから渡されるitemの変更を検知してコンポーネントの状態やStateを初期化する。\n\n### 1. アイテムコンポーネント内でStateを持たず、外部から注入する。\n\nこの対応はシンプルで、親コンポーネントでStateの管理を行います。\n今回の例では、カラーコードの配列のみを扱っているdataの各アイテムデータに対してvisibleIconのプロパティを追加することになります。\nhandlePressなどのhandlerはextraDataというpropsに渡す方法もあります。\n\n### 2. propsから渡されるitemの変更を検知してコンポーネントの状態やStateを初期化する。\n\nこのパターンでは、refやグローバル変数などを使用してitemの変更を検知し、初期化を行います。\n例えば下記のような実装です。\n\n```react\nconst ListItem = ({ item }) => {\n  const scrollViewRef = useRef(null);\n  const [visibleIcon, setVisibleIcon] = useState(false);\n  const lastItemKey = useRef(item.key);\n  if (item.key !== lastItemKey.current) {\n    lastItemKey.current = item.key;\n    setVisibleIcon(false);\n\n    scrollViewRef.current?.scrollTo({x: 0, y: 0, animated: false});\n  }\n\n  ...\n　\n  return (\n    <ScrollView\n      ref={scrollViewRef}\n      ...\n    />\n```\n\nrefで変更前のitemを保持することでpropsから渡されるitemと比較し、\n異なるitemが渡される（コンポーネントがリサイクルされる）タイミングで、visiableIconとScrollViewのスクロール状態を初期化することで、コンポーネントのリサイクルが起きていないように見せています。\n\n業務などで対応する場合には、1と2を合わせて対応するケースが多くなりそうですね。\nついでに実際に対応してみた挙動も見てみましょう。\nコードは[こちら](https://snack.expo.dev/@kazuaki.horita/suburi-flash-list-2)\n\n![ezgif-4-80b3f37cd7.gif](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/684679/fb90b0a8-fab3-1371-cc1d-98b3fb2eee99.gif)\n\n","coediting":false,"comments_count":0,"created_at":"2022-12-03T17:17:14+09:00","group":null,"id":"943e648d16b01cf1d156","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"react-native","versions":[]},{"name":"flash-list","versions":[]}],"title":"FlashListで使われているセルリサイクリング","updated_at":"2022-12-14T11:01:39+09:00","url":"https://qiita.com/alternacrow/items/943e648d16b01cf1d156","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"<h2 data-sourcepos=\"1:1-1:15\">\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h2>\n<p data-sourcepos=\"3:1-5:129\">ページング横スクロールで3桁台の数の入力フォームを扱う要件があり、<br>\n使用ライブラリに<a href=\"https://github.com/dohooo/react-native-reanimated-carousel\" rel=\"nofollow noopener\" target=\"_blank\">react-native-reanimated-carousel</a>を選定していたのですが、ローエンドのAndroid端末で動作があまり快適でない印象を受けました。<br>\nそこで前々から動作が軽いと噂程度に聞いていたFlashListについて調べたのでまとめておきます。</p>\n<h2 data-sourcepos=\"7:1-7:18\">\n<span id=\"flashlistとは\" class=\"fragment\"></span><a href=\"#flashlist%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>FlashListとは</h2>\n<p data-sourcepos=\"9:1-10:114\">FlashListは、FlatListよりも軽くて高速に動作するリストビューです。<br>\nShopifyのエンジニアによって作成され、下記を謳い文句に2022年7月にOSS化されました。</p>\n<ul data-sourcepos=\"11:1-14:0\">\n<li data-sourcepos=\"11:1-11:112\">ローエンドの端末でも60FPS以上の安定したスムーズなスクロールが可能であること</li>\n<li data-sourcepos=\"12:1-12:77\">スクロール時に未レンダリングの発生を抑えられること</li>\n<li data-sourcepos=\"13:1-14:0\">FlatListと実装の置き換えが容易であること</li>\n</ul>\n<p data-sourcepos=\"15:1-16:114\">ネイティブの変更があるライブラリですが、Expoでもサポートされており使用できます。<br>\nまた、<a href=\"https://shopify.github.io/flash-list/docs/guides/masonry\" rel=\"nofollow noopener\" target=\"_blank\">組積レイアウト</a>も実装できます。</p>\n<h2 data-sourcepos=\"18:1-18:33\">\n<span id=\"なぜ軽くて高速なのか\" class=\"fragment\"></span><a href=\"#%E3%81%AA%E3%81%9C%E8%BB%BD%E3%81%8F%E3%81%A6%E9%AB%98%E9%80%9F%E3%81%AA%E3%81%AE%E3%81%8B\"><i class=\"fa fa-link\"></i></a>なぜ軽くて高速なのか</h2>\n<p data-sourcepos=\"20:1-21:238\">FlashListでは、内部で<a href=\"https://github.com/Flipkart/recyclerlistview\" rel=\"nofollow noopener\" target=\"_blank\">RecyclerListView</a>というライブラリを使用しています。<br>\nRecyclerListViewではセルリサイクリングを採用しており、RecyclerListViewとFlatListはアイテムのレンダリングの仕組みが異なり、ハイパフォーマンスなスクロールを可能にしています。</p>\n<h2 data-sourcepos=\"23:1-23:30\">\n<span id=\"セルリサイクリング\" class=\"fragment\"></span><a href=\"#%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%B5%E3%82%A4%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%B0\"><i class=\"fa fa-link\"></i></a>セルリサイクリング</h2>\n<p data-sourcepos=\"25:1-27:150\">FlatListでは表示予定のアイテムのビューを常にゼロから生成します。<br>\nリストをスクロールすると新たなビューが生成され、不要になったビューは破棄されるとともにガベージコレクションが発生します。<br>\nスクロールが高速であればあるほど、生成と破棄のコストは増加し、パフォーマンスに影響を与えはじめます。</p>\n<p data-sourcepos=\"29:1-32:166\">それに対して、RecyclerListViewではスクロールによってビューポートから外れたビューを破棄せず、別のアイテムの表示に再利用し、FlatListで発生していたメモリー・フットプリントの増加を防ぎます。<br>\n再利用されるコンポーネントはアンマウントされず再利用されるため、Propsとして受け取るdataやextraData以外の状態はそのまま引き継がれる点に注意が必要です。<br>\n例えば、アイテムコンポーネント内でuseStateを使用する場合には、Propsとして渡されるアイテムのデータが変わったことを検知し、Stateの書き換えが必要になるかもしれません。<br>\n他には、アイテムコンポーネント内でScrollViewを使用しているとスクロールのオフセットも引き継がれてしまう点などです。</p>\n<h2 data-sourcepos=\"34:1-34:24\">\n<span id=\"使ってみた感想\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F%E6%84%9F%E6%83%B3\"><i class=\"fa fa-link\"></i></a>使ってみた感想</h2>\n<p data-sourcepos=\"36:1-39:135\">Android端末のPixel4aで使用してみた感想になりますが、3桁程度アイテム数が増えてくるとFlatListよりも明らかにスクロールがスムーズであることが体感できました。<br>\n（面倒だったので計測とかは行ってないですが<img alt=\":sweat_smile:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/1f605.png\" title=\":sweat_smile:\" width=\"20\" loading=\"lazy\">）<br>\nセルリサイクリングに注意は必要ですが、大量のアイテム一覧をスクロールするSNSやECのようなアプリの実装の際に貢献してくれるライブラリだと思います。<br>\nFlatListとの置き換えも<code>estimatedItemSize</code>を指定するくらいなので、今後機会があれば使ってみたいです。</p>\n<h2 data-sourcepos=\"41:1-41:9\">\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n<p data-sourcepos=\"43:1-43:36\"><qiita-embed-ogp src=\"https://shopify.github.io/flash-list\"></qiita-embed-ogp></p>\n<p data-sourcepos=\"45:1-45:74\"><qiita-embed-ogp src=\"https://shopify.engineering/instant-performance-upgrade-flatlist-flashlist\"></qiita-embed-ogp></p>\n<p data-sourcepos=\"47:1-47:37\"><qiita-embed-ogp src=\"https://github.com/shopify/flash-list\"></qiita-embed-ogp></p>\n<p data-sourcepos=\"49:1-49:44\"><qiita-embed-ogp src=\"https://github.com/Flipkart/recyclerlistview\"></qiita-embed-ogp></p>\n","body":"## はじめに\n\nページング横スクロールで3桁台の数の入力フォームを扱う要件があり、\n使用ライブラリに[react-native-reanimated-carousel](https://github.com/dohooo/react-native-reanimated-carousel)を選定していたのですが、ローエンドのAndroid端末で動作があまり快適でない印象を受けました。\nそこで前々から動作が軽いと噂程度に聞いていたFlashListについて調べたのでまとめておきます。\n\n## FlashListとは\n\nFlashListは、FlatListよりも軽くて高速に動作するリストビューです。\nShopifyのエンジニアによって作成され、下記を謳い文句に2022年7月にOSS化されました。\n* ローエンドの端末でも60FPS以上の安定したスムーズなスクロールが可能であること\n* スクロール時に未レンダリングの発生を抑えられること\n* FlatListと実装の置き換えが容易であること\n\nネイティブの変更があるライブラリですが、Expoでもサポートされており使用できます。\nまた、[組積レイアウト](https://shopify.github.io/flash-list/docs/guides/masonry)も実装できます。\n\n## なぜ軽くて高速なのか\n\nFlashListでは、内部で[RecyclerListView](https://github.com/Flipkart/recyclerlistview)というライブラリを使用しています。\nRecyclerListViewではセルリサイクリングを採用しており、RecyclerListViewとFlatListはアイテムのレンダリングの仕組みが異なり、ハイパフォーマンスなスクロールを可能にしています。\n\n## セルリサイクリング\n\nFlatListでは表示予定のアイテムのビューを常にゼロから生成します。\nリストをスクロールすると新たなビューが生成され、不要になったビューは破棄されるとともにガベージコレクションが発生します。\nスクロールが高速であればあるほど、生成と破棄のコストは増加し、パフォーマンスに影響を与えはじめます。\n\nそれに対して、RecyclerListViewではスクロールによってビューポートから外れたビューを破棄せず、別のアイテムの表示に再利用し、FlatListで発生していたメモリー・フットプリントの増加を防ぎます。\n再利用されるコンポーネントはアンマウントされず再利用されるため、Propsとして受け取るdataやextraData以外の状態はそのまま引き継がれる点に注意が必要です。\n例えば、アイテムコンポーネント内でuseStateを使用する場合には、Propsとして渡されるアイテムのデータが変わったことを検知し、Stateの書き換えが必要になるかもしれません。\n他には、アイテムコンポーネント内でScrollViewを使用しているとスクロールのオフセットも引き継がれてしまう点などです。\n\n## 使ってみた感想\n\nAndroid端末のPixel4aで使用してみた感想になりますが、3桁程度アイテム数が増えてくるとFlatListよりも明らかにスクロールがスムーズであることが体感できました。\n（面倒だったので計測とかは行ってないですが:sweat_smile:）\nセルリサイクリングに注意は必要ですが、大量のアイテム一覧をスクロールするSNSやECのようなアプリの実装の際に貢献してくれるライブラリだと思います。\nFlatListとの置き換えも`estimatedItemSize`を指定するくらいなので、今後機会があれば使ってみたいです。\n\n## 参考\n\nhttps://shopify.github.io/flash-list\n\nhttps://shopify.engineering/instant-performance-upgrade-flatlist-flashlist\n\nhttps://github.com/shopify/flash-list\n\nhttps://github.com/Flipkart/recyclerlistview\n\n","coediting":false,"comments_count":0,"created_at":"2022-11-28T16:13:21+09:00","group":null,"id":"fc2e5ea3168ed90a5f4f","likes_count":3,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"react-native","versions":[]},{"name":"flash-list","versions":[]}],"title":"FlashListってどんなライブラリ？","updated_at":"2022-12-05T18:45:14+09:00","url":"https://qiita.com/alternacrow/items/fc2e5ea3168ed90a5f4f","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>ISO 8601は、日付と時刻の表記に関するISOの国際規格です。（wikipedia調べ）<br>\nJavaScriptのDateのコンストラクタ（およびDate.parse）に使用できる日時の形式は、ISO 8601を基に仕様が定義されています。</p>\n\n<h1>\n<span id=\"使える形式\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%88%E3%82%8B%E5%BD%A2%E5%BC%8F\"><i class=\"fa fa-link\"></i></a>使える形式</h1>\n\n<p>下記の日付（+時刻+タイムゾーン識別子）の組み合わせで表現できます。</p>\n\n<ul>\n<li>日付\n\n<ul>\n<li><code>YYYY-MM-DD</code></li>\n<li><code>YYYY-MM</code></li>\n<li><code>YYYY</code></li>\n</ul>\n</li>\n<li>時刻\n\n<ul>\n<li><code>THH:mm</code></li>\n<li><code>THH:mm:ss</code></li>\n<li><code>THH:mm:ss.sss</code></li>\n</ul>\n</li>\n<li>タイムゾーン識別子\n\n<ul>\n<li>\n<code>Z</code>（<code>+00:00</code>に同じ）</li>\n<li>\n<code>-23:59</code>~<code>+23:59</code>\n</li>\n</ul>\n</li>\n</ul>\n\n<p>仕様で定められている形式以外にもパース可能なものはありますが、<br>\n実行環境によって結果が左右されるため、実際の動作については確認が必要になります。</p>\n\n<h1>\n<span id=\"使用例\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>使用例</h1>\n\n<div class=\"code-frame\" data-lang=\"javascript\"><div class=\"highlight\"><pre><code><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-28</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-28T00:00:00.000Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-01T00:00:00.000Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-01-01T00:00:00.000Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34:56.789Z</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T12:34:56.789Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11T12:34:56.789Z</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-01T12:34:56.789Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021T12:34:56.789Z</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-01-01T12:34:56.789Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34:56Z</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T12:34:56.000Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34Z</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T12:34:00.000Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34:56.789+00:00</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T12:34:56.789Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34:56.789-09:00</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T21:34:56.789Z</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">2021-11-12T12:34:56.789+09:00</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n<span class=\"c1\">// -&gt; 2021-11-12T03:34:56.789Z</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<p><qiita-embed-ogp src=\"https://ja.wikipedia.org/wiki/ISO_8601\"></qiita-embed-ogp></p>\n\n<p><qiita-embed-ogp src=\"https://tc39.es/ecma262/#sec-date-time-string-format\"></qiita-embed-ogp></p>\n\n<p><qiita-embed-ogp src=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\"></qiita-embed-ogp></p>\n","body":"# はじめに\n\nISO 8601は、日付と時刻の表記に関するISOの国際規格です。（wikipedia調べ）\nJavaScriptのDateのコンストラクタ（およびDate.parse）に使用できる日時の形式は、ISO 8601を基に仕様が定義されています。\n\n# 使える形式\n\n下記の日付（+時刻+タイムゾーン識別子）の組み合わせで表現できます。\n\n- 日付\n - `YYYY-MM-DD`\n - `YYYY-MM`\n - `YYYY`\n- 時刻\n - `THH:mm`\n - `THH:mm:ss`\n - `THH:mm:ss.sss`\n- タイムゾーン識別子\n - `Z`（`+00:00`に同じ）\n - `-23:59`~`+23:59`\n\n仕様で定められている形式以外にもパース可能なものはありますが、\n実行環境によって結果が左右されるため、実際の動作については確認が必要になります。\n\n# 使用例\n\n```javascript\nconsole.log(new Date('2021-11-28'));\n// -> 2021-11-28T00:00:00.000Z\nconsole.log(new Date('2021-11'));\n// -> 2021-11-01T00:00:00.000Z\nconsole.log(new Date('2021'));\n// -> 2021-01-01T00:00:00.000Z\nconsole.log(new Date('2021-11-12T12:34:56.789Z'));\n// -> 2021-11-12T12:34:56.789Z\nconsole.log(new Date('2021-11T12:34:56.789Z'));\n// -> 2021-11-01T12:34:56.789Z\nconsole.log(new Date('2021T12:34:56.789Z'));\n// -> 2021-01-01T12:34:56.789Z\nconsole.log(new Date('2021-11-12T12:34:56Z'));\n// -> 2021-11-12T12:34:56.000Z\nconsole.log(new Date('2021-11-12T12:34Z'));\n// -> 2021-11-12T12:34:00.000Z\nconsole.log(new Date('2021-11-12T12:34:56.789+00:00'));\n// -> 2021-11-12T12:34:56.789Z\nconsole.log(new Date('2021-11-12T12:34:56.789-09:00'));\n// -> 2021-11-12T21:34:56.789Z\nconsole.log(new Date('2021-11-12T12:34:56.789+09:00'));\n// -> 2021-11-12T03:34:56.789Z\n```\n\n# 参考\n\nhttps://ja.wikipedia.org/wiki/ISO_8601\n\nhttps://tc39.es/ecma262/#sec-date-time-string-format\n\nhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\n\n","coediting":false,"comments_count":0,"created_at":"2021-12-20T17:43:18+09:00","group":null,"id":"4c89492ac8b078da9f14","likes_count":1,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"JavaScript","versions":[]},{"name":"ISO8601","versions":[]}],"title":"JavaScriptで使えるISO 8601の形式","updated_at":"2021-12-20T17:43:43+09:00","url":"https://qiita.com/alternacrow/items/4c89492ac8b078da9f14","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>先日、CureAppで毎週行っている勉強会でTypeScriptのOmitの話になりました。<br>\nPickはインテリセンス効くけど、Omitはインテリセンス効かないというものです。<br>\nTypeScriptとしては<a href=\"https://github.com/microsoft/TypeScript/issues/30825\" rel=\"nofollow noopener\" target=\"_blank\">こちら</a>の議論の末、今のインテリセンスが効かない今の実装になっているようです。<br>\nインテリセンスが効くようにOmitをなんとか上書きできないかとちょくちょく調べていたのですが、<br>\nあまり良い方法が見つからず絶望したので、メモとして代替案を残しておこうと思います。</p>\n\n<h1>\n<span id=\"omitの実装\" class=\"fragment\"></span><a href=\"#omit%E3%81%AE%E5%AE%9F%E8%A3%85\"><i class=\"fa fa-link\"></i></a>Omitの実装</h1>\n\n<p>まず、Omitの実装を確認してみます。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"c1\">// lib.es5.d.ts</span>\n<span class=\"cm\">/**\n * Construct a type with the properties of T except for those in type K.\n */</span>\n<span class=\"kd\">type</span> <span class=\"nx\">Omit</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span> <span class=\"kd\">extends</span> <span class=\"kr\">keyof</span> <span class=\"kr\">any</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nb\">Pick</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">Exclude</span><span class=\"o\">&lt;</span><span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>個人的に<code>keyof any</code>を見て発狂しそうなのですが、Omitはtypeで宣言されているので上書きは出来ません。<br>\nなので、必然的に下記のどちらかの対応になりそうです。</p>\n\n<ul>\n<li>patch-packages等で、<code>lib.es5.d.ts</code>のOmitの実装を変更する</li>\n<li>マイOmitを作る</li>\n</ul>\n\n<h2>\n<span id=\"patch-packages等でlibes5dtsのomitの実装を変更する\" class=\"fragment\"></span><a href=\"#patch-packages%E7%AD%89%E3%81%A7libes5dts%E3%81%AEomit%E3%81%AE%E5%AE%9F%E8%A3%85%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>patch-packages等で、<code>lib.es5.d.ts</code>のOmitの実装を変更する</h2>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kd\">type</span> <span class=\"nx\">Omit</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span> <span class=\"kd\">extends</span> <span class=\"kr\">keyof</span> <span class=\"kr\">any</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nb\">Pick</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">Exclude</span><span class=\"o\">&lt;</span><span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>を</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kd\">type</span> <span class=\"nx\">Omit</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span> <span class=\"kd\">extends</span> <span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nb\">Pick</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">Exclude</span><span class=\"o\">&lt;</span><span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>に変更します。<br>\n使用しているTypeScriptのバージョン変更時にはパッチの修正が必要になりますが、<br>\n後者よりは対応が小さく済みます。</p>\n\n<h2>\n<span id=\"マイomitを作る\" class=\"fragment\"></span><a href=\"#%E3%83%9E%E3%82%A4omit%E3%82%92%E4%BD%9C%E3%82%8B\"><i class=\"fa fa-link\"></i></a>マイOmitを作る</h2>\n\n<p>議論でもあがっていましたが、下記のような独自Omitを作る方法です。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kd\">type</span> <span class=\"nx\">OmitScrict</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span> <span class=\"kd\">extends</span> <span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nb\">Pick</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">Exclude</span><span class=\"o\">&lt;</span><span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>Omitがあるのに、OmitStrict…（白目）</p>\n\n<p>ちなみに、組み込みのOmitを使用しないことを強制する場合は、eslintにルールを追加します。</p>\n\n<div class=\"code-frame\" data-lang=\"js\"><div class=\"highlight\"><pre><code><span class=\"p\">{</span>\n  <span class=\"nl\">rules</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"dl\">'</span><span class=\"s1\">@typescript-eslint/ban-types</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"dl\">'</span><span class=\"s1\">error</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">types</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"na\">Omit</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Use `OmitStrict`.</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">},</span>\n    <span class=\"p\">],</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"さいごに\" class=\"fragment\"></span><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"><i class=\"fa fa-link\"></i></a>さいごに</h1>\n\n<p>下記のような実装で済むのが理想でしたが、あまり良い方法が見つけられませんでした。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kr\">declare</span> <span class=\"kd\">type</span> <span class=\"nx\">Omit</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span> <span class=\"kd\">extends</span> <span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nb\">Pick</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">Exclude</span><span class=\"o\">&lt;</span><span class=\"kr\">keyof</span> <span class=\"nx\">T</span><span class=\"p\">,</span> <span class=\"nx\">K</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>他にもっと良い方法があったら教えて頂けると幸いです。</p>\n","body":"# はじめに\n\n先日、CureAppで毎週行っている勉強会でTypeScriptのOmitの話になりました。\nPickはインテリセンス効くけど、Omitはインテリセンス効かないというものです。\nTypeScriptとしては[こちら](https://github.com/microsoft/TypeScript/issues/30825)の議論の末、今のインテリセンスが効かない今の実装になっているようです。\nインテリセンスが効くようにOmitをなんとか上書きできないかとちょくちょく調べていたのですが、\nあまり良い方法が見つからず絶望したので、メモとして代替案を残しておこうと思います。\n\n# Omitの実装\n\nまず、Omitの実装を確認してみます。\n\n```typescript\n// lib.es5.d.ts\n/**\n * Construct a type with the properties of T except for those in type K.\n */\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n```\n\n個人的に`keyof any`を見て発狂しそうなのですが、Omitはtypeで宣言されているので上書きは出来ません。\nなので、必然的に下記のどちらかの対応になりそうです。\n\n- patch-packages等で、`lib.es5.d.ts`のOmitの実装を変更する\n- マイOmitを作る\n\n## patch-packages等で、`lib.es5.d.ts`のOmitの実装を変更する\n\n```typescript\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n```\n\nを\n\n```typescript\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n```\n\nに変更します。\n使用しているTypeScriptのバージョン変更時にはパッチの修正が必要になりますが、\n後者よりは対応が小さく済みます。\n\n## マイOmitを作る\n\n議論でもあがっていましたが、下記のような独自Omitを作る方法です。\n\n```typescript\ntype OmitScrict<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n```\n\nOmitがあるのに、OmitStrict…（白目）\n\nちなみに、組み込みのOmitを使用しないことを強制する場合は、eslintにルールを追加します。\n\n```js\n{\n  rules: {\n    '@typescript-eslint/ban-types': [\n      'error',\n      {\n        types: {\n          Omit: \"Use `OmitStrict`.\",\n        },\n      },\n    ],\n  }\n}\n```\n\n# さいごに\n\n下記のような実装で済むのが理想でしたが、あまり良い方法が見つけられませんでした。\n\n```typescript\ndeclare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n```\n\n他にもっと良い方法があったら教えて頂けると幸いです。\n","coediting":false,"comments_count":0,"created_at":"2021-12-13T16:04:06+09:00","group":null,"id":"01876533e29ed422803a","likes_count":6,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"TypeScript","versions":[]}],"title":"TypeScriptのOmitが気持ち悪くてつらい","updated_at":"2021-12-13T16:04:06+09:00","url":"https://qiita.com/alternacrow/items/01876533e29ed422803a","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"tldr\" class=\"fragment\"></span><a href=\"#tldr\"><i class=\"fa fa-link\"></i></a>TL;DR</h1>\n\n<p>ScrollView内でSafeAreaView使うときは、ScrollViewに<code>contentInsetAdjustmentBehavior=\"automatic\"</code>のpropsを渡せばスクロールがぶっ壊れない。</p>\n\n<div class=\"code-frame\" data-lang=\"jsx\"><div class=\"highlight\"><pre><code><span class=\"p\">&lt;</span><span class=\"nc\">ScrollView</span> <span class=\"na\">contentInsetAdjustmentBehavior</span><span class=\"p\">=</span><span class=\"s\">\"automatic\"</span><span class=\"p\">&gt;</span> \n  <span class=\"p\">&lt;</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n    <span class=\"si\">{</span><span class=\"cm\">/* Long Content */</span><span class=\"si\">}</span>\n  <span class=\"p\">&lt;/</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nc\">ScrollView</span><span class=\"p\">&gt;</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>React Nativeには、AndroidとiOSを同時に開発できる利点があります。<br>\n一方で、AndroidにはAndroidの、iOSにはiOSにしか無い仕様も存在し、その一つにiOSのセーフエリアがあります。</p>\n\n<p>セーフエリアには、上部のセーフエリア（Status Bar）と下部のセーフエリア（Home Indicator）の２つが存在します。<br>\nReact Nativeでは、SafeAreaViewというコンポーネントを利用することで、よしなにセーフエリア領域を扱うことができます。</p>\n\n<h1>\n<span id=\"scrollview内で使用するときの注意\" class=\"fragment\"></span><a href=\"#scrollview%E5%86%85%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F\"><i class=\"fa fa-link\"></i></a>ScrollView内で使用するときの注意</h1>\n\n<div class=\"code-frame\" data-lang=\"jsx\"><div class=\"highlight\"><pre><code><span class=\"p\">&lt;</span><span class=\"nc\">ScrollView</span> <span class=\"na\">contentInsetAdjustmentBehavior</span><span class=\"p\">=</span><span class=\"s\">\"automatic\"</span><span class=\"p\">&gt;</span> \n  <span class=\"p\">&lt;</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n    <span class=\"si\">{</span><span class=\"cm\">/* Long Content */</span><span class=\"si\">}</span>\n  <span class=\"p\">&lt;/</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nc\">ScrollView</span><span class=\"p\">&gt;</span>\n</code></pre></div></div>\n","body":"# TL;DR\nScrollView内でSafeAreaView使うときは、ScrollViewに`contentInsetAdjustmentBehavior=\"automatic\"`のpropsを渡せばスクロールがぶっ壊れない。\n\n```jsx\n<ScrollView contentInsetAdjustmentBehavior=\"automatic\"> \n  <SafeAreaView>\n    {/* Long Content */}\n  </SafeAreaView>\n</ScrollView>\n```\n\n# はじめに\nReact Nativeには、AndroidとiOSを同時に開発できる利点があります。\n一方で、AndroidにはAndroidの、iOSにはiOSにしか無い仕様も存在し、その一つにiOSのセーフエリアがあります。\n\nセーフエリアには、上部のセーフエリア（Status Bar）と下部のセーフエリア（Home Indicator）の２つが存在します。\nReact Nativeでは、SafeAreaViewというコンポーネントを利用することで、よしなにセーフエリア領域を扱うことができます。\n\n# ScrollView内で使用するときの注意\n\n\n\n```jsx\n<ScrollView contentInsetAdjustmentBehavior=\"automatic\"> \n  <SafeAreaView>\n    {/* Long Content */}\n  </SafeAreaView>\n</ScrollView>\n```\n","coediting":false,"comments_count":0,"created_at":"2021-12-06T21:00:53+09:00","group":null,"id":"80468a28aef96994f5a1","likes_count":0,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"react-native","versions":[]}],"title":"SafeAreaViewをScrollView内で使用するときの注意点","updated_at":"2021-12-06T21:00:53+09:00","url":"https://qiita.com/alternacrow/items/80468a28aef96994f5a1","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>React Nativeでは、htmlのようにsvgファイルを素の状態で利用することができません。<br>\nreact-native-svgというライブラリを使用する必要があり、React Nativeで扱えるように変換する必要があります。<br>\n変換にはいくつか方法がありますが、下記のような種類があります。</p>\n\n<ul>\n<li><a href=\"#react-native-svg-transformer%E3%81%A7svg%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E4%BD%BF%E3%81%86\">react-native-svg-transformerでsvgファイルをそのまま使う</a></li>\n<li><a href=\"#cli---svgrcli%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%A4%89%E6%8F%9B\">CLI - @svgr/cliでコンポーネントファイルに変換</a></li>\n<li><a href=\"#gui---svg-playground%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%A4%89%E6%8F%9B\">GUI - SVG Playgroundでコンポーネントファイルに変換</a></li>\n<li><a href=\"#%E6%9C%80%E5%88%9D%E3%81%8B%E3%82%89react-native-svg%E3%81%A7%E6%9B%B8%E3%81%8F\">最初からreact-native-svgで書く</a></li>\n</ul>\n\n<h1>\n<span id=\"各方法のメリットデメリット\" class=\"fragment\"></span><a href=\"#%E5%90%84%E6%96%B9%E6%B3%95%E3%81%AE%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88%E3%83%87%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88\"><i class=\"fa fa-link\"></i></a>各方法のメリット・デメリット</h1>\n\n<h2>\n<span id=\"react-native-svg-transformerでsvgファイルをそのまま使う\" class=\"fragment\"></span><a href=\"#react-native-svg-transformer%E3%81%A7svg%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>react-native-svg-transformerでsvgファイルをそのまま使う</h2>\n\n<p><qiita-embed-ogp src=\"https://github.com/kristerkari/react-native-svg-transformer\"></qiita-embed-ogp></p>\n\n<p>svgファイルを直接importする方法です。<br>\n大量のsvgファイルを扱う場合に、設定を書くだけで利用できます。</p>\n\n<ul>\n<li>メリット\n\n<ul>\n<li>変換の手順を踏まず、svgファイルを直接読み込める。</li>\n<li>設定を書けば、propsによるfillやstrokeの色指定等可能</li>\n</ul>\n</li>\n<li>デメリット\n\n<ul>\n<li>svgファイルの構成が統一されていない場合、設定での調整が難しい</li>\n<li>TypeScriptを使用する場合、declarationが必要\n\n<ul>\n<li>公式参照 <a href=\"https://github.com/kristerkari/react-native-svg-transformer#using-typescript\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kristerkari/react-native-svg-transformer#using-typescript</a>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"cli---svgrcliでコンポーネントファイルに変換\" class=\"fragment\"></span><a href=\"#cli---svgrcli%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%A4%89%E6%8F%9B\"><i class=\"fa fa-link\"></i></a>CLI - @svgr/cliでコンポーネントファイルに変換</h2>\n\n<p><qiita-embed-ogp src=\"https://github.com/gregberge/svgr\"></qiita-embed-ogp></p>\n\n<p>svgファイルをCLIでreact-native-svgに変換したファイルをimportする方法です。<br>\n変換後のファイルがどうなっているか確認が容易です。</p>\n\n<ul>\n<li>メリット\n\n<ul>\n<li>変換後のファイルを確認、調整可能</li>\n<li>設定を書けば、propsによるfillやstrokeの色指定等可能</li>\n</ul>\n</li>\n<li>デメリット\n\n<ul>\n<li>オプションが一部しかconfigファイルに書けないため、細かい設定、調整をしたい場合にコマンドが長くなりがち</li>\n<li>svgファイルの構成が統一されていない場合、設定での調整が難しい</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"gui---svg-playgroundでコンポーネントファイルに変換\" class=\"fragment\"></span><a href=\"#gui---svg-playground%E3%81%A7%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%A4%89%E6%8F%9B\"><i class=\"fa fa-link\"></i></a>GUI - SVG Playgroundでコンポーネントファイルに変換</h2>\n\n<p><qiita-embed-ogp src=\"https://react-svgr.com/playground/\"></qiita-embed-ogp></p>\n\n<p>GUIでsvgファイルを変換、調整可能な方法です。<br>\nローカルのsvgファイルをドラッグアンドドロップして読み込めます。</p>\n\n<ul>\n<li>メリット\n\n<ul>\n<li>各ファイルに対して個別の設定、調整が可能</li>\n<li>CLIや細かい設定での調整が苦手でも扱いやすい</li>\n</ul>\n</li>\n<li>デメリット\n\n<ul>\n<li>一つひとつのファイルに対して手動変換を行うので、svgファイルの数が増えれば増えるほどしんどい</li>\n</ul>\n</li>\n</ul>\n\n<h2>\n<span id=\"最初からreact-native-svgで書く\" class=\"fragment\"></span><a href=\"#%E6%9C%80%E5%88%9D%E3%81%8B%E3%82%89react-native-svg%E3%81%A7%E6%9B%B8%E3%81%8F\"><i class=\"fa fa-link\"></i></a>最初からreact-native-svgで書く</h2>\n\n<p>通常、svgエディタを使用してsvgを作成、その後React Native用に変換という手順をすっ飛ばし、コードで書いちゃうマンの方法です。<br>\n自作のグラフを作成する場合などに有効な方法です。</p>\n\n<p><qiita-embed-ogp src=\"https://github.com/react-native-svg/react-native-svg\"></qiita-embed-ogp></p>\n\n<ul>\n<li>メリット\n\n<ul>\n<li>svgファイルとはなんだったのか</li>\n</ul>\n</li>\n<li>デメリット\n\n<ul>\n<li>しんどい。しんどくない？</li>\n</ul>\n</li>\n</ul>\n\n<h1>\n<span id=\"さいごに\" class=\"fragment\"></span><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"><i class=\"fa fa-link\"></i></a>さいごに</h1>\n\n<p>react-native-svgではまだサポートされていないsvgの機能があります。<br>\n変換後の見え方に違和感がある場合は、cliやguiで変換するとサポートされていない機能についてコメントされるので確認してみてください。</p>\n\n<p>他にも良い方法やおかしな点がある場合には、コメント頂けるとありがたいです。</p>\n","body":"# はじめに\nReact Nativeでは、htmlのようにsvgファイルを素の状態で利用することができません。\nreact-native-svgというライブラリを使用する必要があり、React Nativeで扱えるように変換する必要があります。\n変換にはいくつか方法がありますが、下記のような種類があります。\n\n- [react-native-svg-transformerでsvgファイルをそのまま使う](#react-native-svg-transformerでsvgファイルをそのまま使う)\n- [CLI - @svgr/cliでコンポーネントファイルに変換](#cli---svgrcliでコンポーネントファイルに変換)\n- [GUI - SVG Playgroundでコンポーネントファイルに変換](#gui---svg-playgroundでコンポーネントファイルに変換)\n- [最初からreact-native-svgで書く](#最初からreact-native-svgで書く)\n\n# 各方法のメリット・デメリット\n\n## react-native-svg-transformerでsvgファイルをそのまま使う\n\nhttps://github.com/kristerkari/react-native-svg-transformer\n\nsvgファイルを直接importする方法です。\n大量のsvgファイルを扱う場合に、設定を書くだけで利用できます。\n\n- メリット\n    - 変換の手順を踏まず、svgファイルを直接読み込める。\n    - 設定を書けば、propsによるfillやstrokeの色指定等可能\n- デメリット\n    - svgファイルの構成が統一されていない場合、設定での調整が難しい\n    - TypeScriptを使用する場合、declarationが必要\n        - 公式参照 https://github.com/kristerkari/react-native-svg-transformer#using-typescript\n\n## CLI - @svgr/cliでコンポーネントファイルに変換\n\nhttps://github.com/gregberge/svgr\n\nsvgファイルをCLIでreact-native-svgに変換したファイルをimportする方法です。\n変換後のファイルがどうなっているか確認が容易です。\n\n- メリット\n    - 変換後のファイルを確認、調整可能\n    - 設定を書けば、propsによるfillやstrokeの色指定等可能\n- デメリット\n    - オプションが一部しかconfigファイルに書けないため、細かい設定、調整をしたい場合にコマンドが長くなりがち\n    - svgファイルの構成が統一されていない場合、設定での調整が難しい\n\n## GUI - SVG Playgroundでコンポーネントファイルに変換\n\nhttps://react-svgr.com/playground/\n\nGUIでsvgファイルを変換、調整可能な方法です。\nローカルのsvgファイルをドラッグアンドドロップして読み込めます。\n\n- メリット\n    - 各ファイルに対して個別の設定、調整が可能\n    - CLIや細かい設定での調整が苦手でも扱いやすい\n- デメリット\n    - 一つひとつのファイルに対して手動変換を行うので、svgファイルの数が増えれば増えるほどしんどい\n\n## 最初からreact-native-svgで書く\n\n通常、svgエディタを使用してsvgを作成、その後React Native用に変換という手順をすっ飛ばし、コードで書いちゃうマンの方法です。\n自作のグラフを作成する場合などに有効な方法です。\n\nhttps://github.com/react-native-svg/react-native-svg\n\n- メリット\n  - svgファイルとはなんだったのか\n- デメリット\n  - しんどい。しんどくない？\n\n# さいごに\n\nreact-native-svgではまだサポートされていないsvgの機能があります。\n変換後の見え方に違和感がある場合は、cliやguiで変換するとサポートされていない機能についてコメントされるので確認してみてください。\n\n他にも良い方法やおかしな点がある場合には、コメント頂けるとありがたいです。\n","coediting":false,"comments_count":0,"created_at":"2021-11-22T14:36:15+09:00","group":null,"id":"762e44c1b5c0a3100908","likes_count":2,"private":false,"reactions_count":0,"stocks_count":2,"tags":[{"name":"SVG","versions":[]},{"name":"react-native","versions":[]}],"title":"React NativeでSVGを扱う","updated_at":"2021-11-22T14:36:15+09:00","url":"https://qiita.com/alternacrow/items/762e44c1b5c0a3100908","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>スマートフォンがダークモードに対応してから、今ではスマホアプリでもウェブサイトでもダークモードに対応しているのが珍しくなくなりました。<br>\n私の周りではダークモードを使っている人がほとんどで、私も常時ダークモードにしています。</p>\n\n<p>ただ、開発者の視点ではダークモード対応は機能として必須ではないため、個人アプリの開発や後回しにしがちだと思います。<br>\nそんなときは、端末のダークモード設定を無視し、アプリ上では常にライトモードにすることができます。</p>\n\n<h1>\n<span id=\"実装\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A3%85\"><i class=\"fa fa-link\"></i></a>実装</h1>\n\n<h2>\n<span id=\"ios\" class=\"fragment\"></span><a href=\"#ios\"><i class=\"fa fa-link\"></i></a>iOS</h2>\n\n<div class=\"code-frame\" data-lang=\"objective_c\"><div class=\"highlight\"><pre><code><span class=\"cm\">/* AppRoot/ios/AppName/AppDelegate.m */</span>\n\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">application</span> <span class=\"nf\">didFinishLaunchingWithOptions</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">launchOptions</span>\n<span class=\"p\">{</span>\n<span class=\"cp\">#ifdef FB_SONARKIT_ENABLED\n</span>  <span class=\"n\">InitializeFlipper</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">);</span>\n<span class=\"cp\">#endif\n</span>\n  <span class=\"p\">...</span>\n\n  <span class=\"cm\">/**\n   * この3行を追加\n   * iOS13以降でライトモードを強制する\n   */</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"err\">@available</span><span class=\"p\">(</span><span class=\"n\">iOS</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">window</span><span class=\"p\">.</span><span class=\"n\">overrideUserInterfaceStyle</span> <span class=\"o\">=</span> <span class=\"n\">UIUserInterfaceStyleLight</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"k\">return</span> <span class=\"nb\">YES</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2>\n<span id=\"android\" class=\"fragment\"></span><a href=\"#android\"><i class=\"fa fa-link\"></i></a>Android</h2>\n\n<div class=\"code-frame\" data-lang=\"java\"><div class=\"highlight\"><pre><code><span class=\"cm\">/* AppRoot/android/app/src/main/java/com/AppName/MainApplication.java */</span>\n\n<span class=\"kn\">package</span> <span class=\"nn\">com.AppName</span>\n\n<span class=\"c1\">// この行を追加</span>\n<span class=\"kn\">import</span> <span class=\"nn\">androidx.appcompat.app.AppCompatDelegate</span><span class=\"o\">;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">android.app.Application</span><span class=\"o\">;</span>\n  <span class=\"o\">...</span>\n\n  <span class=\"nd\">@Override</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onCreate</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onCreate</span><span class=\"o\">();</span>\n    <span class=\"nc\">SoLoader</span><span class=\"o\">.</span><span class=\"na\">init</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"cm\">/* native exopackage */</span> <span class=\"kc\">false</span><span class=\"o\">);</span>\n    <span class=\"n\">initializeFlipper</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">,</span> <span class=\"n\">getReactNativeHost</span><span class=\"o\">().</span><span class=\"na\">getReactInstanceManager</span><span class=\"o\">());</span>\n     <span class=\"c1\">// この行を追加</span>\n    <span class=\"nc\">AppCompatDelegate</span><span class=\"o\">.</span><span class=\"na\">setDefaultNightMode</span><span class=\"o\">(</span><span class=\"nc\">AppCompatDelegate</span><span class=\"o\">.</span><span class=\"na\">MODE_NIGHT_NO</span><span class=\"o\">);</span>\n  <span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h2>\n<span id=\"expoの場合\" class=\"fragment\"></span><a href=\"#expo%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>Expoの場合</h2>\n\n<p>app.json</p>\n\n<div class=\"code-frame\" data-lang=\"json\"><div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"expo\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"userInterfaceStyle\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"light\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<p>expo.userInterfaceStyleは一括設定なので、<br>\n下記のように個別に設定することも可能</p>\n\n<div class=\"code-frame\" data-lang=\"json\"><div class=\"highlight\"><pre><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"expo\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"userInterfaceStyle\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"automatic\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"ios\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"userInterfaceStyle\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"light\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n","body":"# はじめに\nスマートフォンがダークモードに対応してから、今ではスマホアプリでもウェブサイトでもダークモードに対応しているのが珍しくなくなりました。\n私の周りではダークモードを使っている人がほとんどで、私も常時ダークモードにしています。\n\nただ、開発者の視点ではダークモード対応は機能として必須ではないため、個人アプリの開発や後回しにしがちだと思います。\nそんなときは、端末のダークモード設定を無視し、アプリ上では常にライトモードにすることができます。\n\n# 実装\n\n## iOS\n\n```objective_c\n/* AppRoot/ios/AppName/AppDelegate.m */\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n#ifdef FB_SONARKIT_ENABLED\n  InitializeFlipper(application);\n#endif\n\n  ...\n\n  /**\n   * この3行を追加\n   * iOS13以降でライトモードを強制する\n   */\n  if (@available(iOS 13, *)) {\n    self.window.overrideUserInterfaceStyle = UIUserInterfaceStyleLight;\n  }\n\n  return YES;\n}\n```\n\n## Android\n\n```java\n/* AppRoot/android/app/src/main/java/com/AppName/MainApplication.java */\n\npackage com.AppName\n\n// この行を追加\nimport androidx.appcompat.app.AppCompatDelegate;\nimport android.app.Application;\n  ...\n\n  @Override\n  public void onCreate() {\n    super.onCreate();\n    SoLoader.init(this, /* native exopackage */ false);\n    initializeFlipper(this, getReactNativeHost().getReactInstanceManager());\n     // この行を追加\n    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO);\n  }\n```\n\n## Expoの場合\n\napp.json\n\n```json\n{\n  \"expo\": {\n    \"userInterfaceStyle\": \"light\",\n  }\n}\n```\n\nexpo.userInterfaceStyleは一括設定なので、\n下記のように個別に設定することも可能\n\n```json\n{\n  \"expo\": {\n    \"userInterfaceStyle\": \"automatic\",\n    \"ios\": {\n      \"userInterfaceStyle\": \"light\",\n    }\n  }\n}\n```\n","coediting":false,"comments_count":0,"created_at":"2021-11-14T19:19:48+09:00","group":null,"id":"5ffc633fc51a99aae34e","likes_count":0,"private":false,"reactions_count":0,"stocks_count":1,"tags":[{"name":"react-native","versions":[]},{"name":"expo","versions":[]},{"name":"DarkMode","versions":[]}],"title":"React Nativeでライトモードを強制する","updated_at":"2021-11-14T19:19:48+09:00","url":"https://qiita.com/alternacrow/items/5ffc633fc51a99aae34e","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>TypeScriptでNext.jsを書くとき、<br>\nパスの生成やパスパラメータの取得に型が付くといいなと思っていたので、書きました。</p>\n\n<h1>\n<span id=\"リポジトリ\" class=\"fragment\"></span><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA\"><i class=\"fa fa-link\"></i></a>リポジトリ</h1>\n\n<p><qiita-embed-ogp src=\"https://github.com/alternacrow/next-routing-with-typescript\"></qiita-embed-ogp></p>\n\n<h1>\n<span id=\"コード\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%BC%E3%83%89\"><i class=\"fa fa-link\"></i></a>コード</h1>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">useRouter</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">next/router</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Paths</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">home</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">users</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/users</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/users/[userId]</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">blogs</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/users/[userId]/blogs</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">blog</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/users/[userId]/blogs/[blogId]</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">address</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/address/[prefecture]/[...cities]</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">calc</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">/calc/[operator]/[[...numbers]]</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span> <span class=\"k\">as</span> <span class=\"kd\">const</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">PathNames</span> <span class=\"o\">=</span> <span class=\"kr\">keyof</span> <span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">Path</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">PathNames</span><span class=\"p\">];</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">WithoutSlash</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`/</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">U</span><span class=\"p\">}</span><span class=\"s2\">`</span> <span class=\"p\">?</span> <span class=\"nx\">U</span> <span class=\"p\">:</span> <span class=\"nx\">never</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">Resource</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">U</span><span class=\"p\">}</span><span class=\"s2\">/</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">S</span><span class=\"p\">}</span><span class=\"s2\">`</span> <span class=\"p\">?</span> <span class=\"nx\">U</span> <span class=\"o\">|</span> <span class=\"nx\">Resource</span><span class=\"o\">&lt;</span><span class=\"nx\">S</span><span class=\"o\">&gt;</span> <span class=\"p\">:</span> <span class=\"nx\">T</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">DynamicOptionalArrayRoute</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`[[...</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">U</span><span class=\"p\">}</span><span class=\"s2\">]]`</span> <span class=\"p\">?</span> <span class=\"nx\">U</span> <span class=\"p\">:</span> <span class=\"nx\">never</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">DynamicArrayRoute</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`[...</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">U</span><span class=\"p\">}</span><span class=\"s2\">]`</span> <span class=\"p\">?</span> <span class=\"nx\">U</span> <span class=\"p\">:</span> <span class=\"nx\">never</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">DynamicRoute</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`[[...</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">_U</span><span class=\"p\">}</span><span class=\"s2\">]]`</span>\n  <span class=\"p\">?</span> <span class=\"nx\">never</span>\n  <span class=\"p\">:</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`[...</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">_U</span><span class=\"p\">}</span><span class=\"s2\">]`</span>\n  <span class=\"p\">?</span> <span class=\"nx\">never</span>\n  <span class=\"p\">:</span> <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"s2\">`[</span><span class=\"p\">${</span><span class=\"nx\">infer</span> <span class=\"nx\">U</span><span class=\"p\">}</span><span class=\"s2\">]`</span>\n  <span class=\"p\">?</span> <span class=\"nx\">U</span>\n  <span class=\"p\">:</span> <span class=\"nx\">never</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">OptionalArrayParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">DynamicOptionalArrayRoute</span><span class=\"o\">&lt;</span>\n  <span class=\"nx\">Resource</span><span class=\"o\">&lt;</span><span class=\"nx\">WithoutSlash</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span>\n<span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">ArrayParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">DynamicArrayRoute</span><span class=\"o\">&lt;</span><span class=\"nx\">Resource</span><span class=\"o\">&lt;</span><span class=\"nx\">WithoutSlash</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">Params</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">DynamicRoute</span><span class=\"o\">&lt;</span><span class=\"nx\">Resource</span><span class=\"o\">&lt;</span><span class=\"nx\">WithoutSlash</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;&gt;</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">OptionalArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">Path</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">OptionalArrayParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">ArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">Path</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">ArrayParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"kd\">type</span> <span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">Path</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">Params</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">PathParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">PathNames</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">pathname</span><span class=\"p\">:</span> <span class=\"nx\">T</span><span class=\"p\">;</span>\n  <span class=\"nl\">params</span><span class=\"p\">?:</span> <span class=\"nb\">Partial</span><span class=\"o\">&lt;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">OptionalArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"p\">)[]</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">ArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"p\">)[]</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">number</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">Args</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">PathNames</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span> <span class=\"kd\">extends</span> <span class=\"nx\">never</span>\n  <span class=\"p\">?</span> <span class=\"nx\">PathParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span>\n  <span class=\"p\">:</span> <span class=\"nx\">Required</span><span class=\"o\">&lt;</span><span class=\"nx\">PathParams</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">createPath</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">PathNames</span><span class=\"o\">&gt;</span><span class=\"p\">({</span>\n  <span class=\"nx\">pathname</span><span class=\"p\">,</span>\n  <span class=\"nx\">params</span><span class=\"p\">,</span>\n<span class=\"p\">}:</span> <span class=\"nx\">Args</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">pathname</span><span class=\"p\">];</span>\n\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">params</span> <span class=\"o\">===</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">path</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">directories</span> <span class=\"o\">=</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">replacedDirectories</span> <span class=\"o\">=</span> <span class=\"nx\">directories</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">str</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">matchOptionalArray</span> <span class=\"o\">=</span> <span class=\"nx\">str</span><span class=\"p\">.</span><span class=\"nx\">match</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">\\[\\[\\.\\.\\.(</span><span class=\"sr\">.*</span><span class=\"se\">?)\\]\\]</span><span class=\"sr\">/</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">matchOptionalArray</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">key</span> <span class=\"o\">=</span> <span class=\"nx\">matchOptionalArray</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">as</span> <span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">path</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">param</span> <span class=\"o\">=</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"nx\">key</span><span class=\"p\">];</span>\n      <span class=\"k\">return</span> <span class=\"nx\">param</span> <span class=\"p\">?</span> <span class=\"nx\">param</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">matchArray</span> <span class=\"o\">=</span> <span class=\"nx\">str</span><span class=\"p\">.</span><span class=\"nx\">match</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">\\[\\.\\.\\.(</span><span class=\"sr\">.*</span><span class=\"se\">?)\\]</span><span class=\"sr\">/</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">matchArray</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">key</span> <span class=\"o\">=</span> <span class=\"nx\">matchArray</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">as</span> <span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">path</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n      <span class=\"k\">return</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"nx\">key</span><span class=\"p\">].</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">match</span> <span class=\"o\">=</span> <span class=\"nx\">str</span><span class=\"p\">.</span><span class=\"nx\">match</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">\\[(</span><span class=\"sr\">.*</span><span class=\"se\">?)\\]</span><span class=\"sr\">/</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">match</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">key</span> <span class=\"o\">=</span> <span class=\"nx\">match</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">];</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">trimmed</span> <span class=\"o\">=</span> <span class=\"nx\">key</span><span class=\"p\">.</span><span class=\"nx\">substring</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">key</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span>\n        <span class=\"k\">typeof</span> <span class=\"nx\">path</span>\n      <span class=\"o\">&gt;</span><span class=\"p\">;</span>\n      <span class=\"k\">return</span> <span class=\"nx\">params</span><span class=\"p\">[</span><span class=\"nx\">trimmed</span><span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"nx\">str</span><span class=\"p\">;</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"k\">return</span> <span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span> <span class=\"o\">+</span> <span class=\"nx\">replacedDirectories</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">((</span><span class=\"nx\">d</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">d</span> <span class=\"o\">!==</span> <span class=\"dl\">\"\"</span><span class=\"p\">).</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">usePathParams</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span>\n  <span class=\"nx\">T</span> <span class=\"kd\">extends</span> <span class=\"nx\">PathNames</span> <span class=\"o\">=</span> <span class=\"nx\">PathNames</span><span class=\"p\">,</span>\n  <span class=\"nx\">Query</span> <span class=\"kd\">extends</span> <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"kr\">string</span><span class=\"p\">,</span> <span class=\"kr\">string</span> <span class=\"o\">|</span> <span class=\"kr\">string</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n<span class=\"o\">&gt;</span><span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">router</span> <span class=\"o\">=</span> <span class=\"nx\">useRouter</span><span class=\"p\">();</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">params</span> <span class=\"o\">=</span> <span class=\"nx\">router</span><span class=\"p\">.</span><span class=\"nx\">query</span> <span class=\"k\">as</span> <span class=\"nb\">Partial</span><span class=\"o\">&lt;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">OptionalArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"kr\">string</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">ArrayParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"kr\">string</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span>\n    <span class=\"nb\">Record</span><span class=\"o\">&lt;</span><span class=\"nx\">ParamKeys</span><span class=\"o\">&lt;</span><span class=\"k\">typeof</span> <span class=\"nx\">Paths</span><span class=\"p\">[</span><span class=\"nx\">T</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"kr\">string</span><span class=\"o\">&gt;</span> <span class=\"o\">&amp;</span>\n    <span class=\"nb\">Partial</span><span class=\"o\">&lt;</span><span class=\"nx\">Query</span><span class=\"o\">&gt;</span><span class=\"p\">;</span>\n\n  <span class=\"k\">return</span> <span class=\"nx\">params</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h1>\n\n<p>まず、パスを定数として定義した<code>Paths</code>を用意します。<br>\nkeyにはページ名を、valueには動的ルーティングをstringで設定します。</p>\n\n<p>パスの生成には<code>createPath</code>を使用します。<br>\n<code>pathname</code>を指定すると、必要なパラメータをparamsに渡すよう要求されます。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"cm\">/**\n * 生成されるパス\n * /address/hokkaido/sendai/hakodate\n */</span>\n<span class=\"kd\">const</span> <span class=\"nx\">address</span> <span class=\"o\">=</span> <span class=\"nx\">createPath</span><span class=\"p\">({</span>\n  <span class=\"na\">pathname</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">address</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">params</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"na\">prefecture</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">hokkaido</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"na\">cities</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">sendai</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">hakodate</span><span class=\"dl\">\"</span><span class=\"p\">]</span> <span class=\"p\">},</span>\n<span class=\"p\">});</span>\n</code></pre></div></div>\n\n<p>各NextPageでパラメータを取得するときは、<code>usePathParams</code>を使用します。<br>\nusePathParamsに<code>Paths</code>で定義したページ名を型引数として渡すことで、<br>\n対応したパラメータを取得できます。<br>\n他にクエリなども使用している場合は、型の第２引数にオブジェクトで渡します。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"cm\">/**\n * prefecture: string;\n * cities: string[];\n * name?: string;\n */</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">prefecture</span><span class=\"p\">,</span> <span class=\"nx\">cities</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">usePathParams</span><span class=\"o\">&lt;</span><span class=\"dl\">\"</span><span class=\"s2\">address</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"kr\">string</span> <span class=\"p\">}</span><span class=\"o\">&gt;</span><span class=\"p\">();</span>\n</code></pre></div></div>\n\n<h1>\n<span id=\"さいごに\" class=\"fragment\"></span><a href=\"#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB\"><i class=\"fa fa-link\"></i></a>さいごに</h1>\n\n<p>もっと良い書き方やバグ等あれば教えていただけると嬉しいです。</p>\n\n<h1>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h1>\n\n<p><qiita-embed-ogp src=\"https://zenn.dev/panda_program/articles/typescript-nextjs-routing\"></qiita-embed-ogp></p>\n","body":"# はじめに\nTypeScriptでNext.jsを書くとき、\nパスの生成やパスパラメータの取得に型が付くといいなと思っていたので、書きました。\n\n# リポジトリ\nhttps://github.com/alternacrow/next-routing-with-typescript\n\n# コード\n```typescript\nimport { useRouter } from \"next/router\";\n\nconst Paths = {\n  home: \"/\",\n  users: \"/users\",\n  user: \"/users/[userId]\",\n  blogs: \"/users/[userId]/blogs\",\n  blog: \"/users/[userId]/blogs/[blogId]\",\n  address: \"/address/[prefecture]/[...cities]\",\n  calc: \"/calc/[operator]/[[...numbers]]\",\n} as const;\n\ntype PathNames = keyof typeof Paths;\ntype Path = typeof Paths[PathNames];\n\ntype WithoutSlash<T> = T extends `/${infer U}` ? U : never;\ntype Resource<T> = T extends `${infer U}/${infer S}` ? U | Resource<S> : T;\n\ntype DynamicOptionalArrayRoute<T> = T extends `[[...${infer U}]]` ? U : never;\ntype DynamicArrayRoute<T> = T extends `[...${infer U}]` ? U : never;\ntype DynamicRoute<T> = T extends `[[...${infer _U}]]`\n  ? never\n  : T extends `[...${infer _U}]`\n  ? never\n  : T extends `[${infer U}]`\n  ? U\n  : never;\n\ntype OptionalArrayParams<T> = DynamicOptionalArrayRoute<\n  Resource<WithoutSlash<T>>\n>;\ntype ArrayParams<T> = DynamicArrayRoute<Resource<WithoutSlash<T>>>;\ntype Params<T> = DynamicRoute<Resource<WithoutSlash<T>>>;\n\ntype OptionalArrayParamKeys<T extends Path> = OptionalArrayParams<T>;\ntype ArrayParamKeys<T extends Path> = ArrayParams<T>;\ntype ParamKeys<T extends Path> = Params<T>;\n\ntype PathParams<T extends PathNames> = {\n  pathname: T;\n  params?: Partial<\n    Record<OptionalArrayParamKeys<typeof Paths[T]>, (string | number)[]>\n  > &\n    Record<ArrayParamKeys<typeof Paths[T]>, (string | number)[]> &\n    Record<ParamKeys<typeof Paths[T]>, string | number>;\n};\n\ntype Args<T extends PathNames> = ParamKeys<typeof Paths[T]> extends never\n  ? PathParams<T>\n  : Required<PathParams<T>>;\n\nexport const createPath = <T extends PathNames>({\n  pathname,\n  params,\n}: Args<T>) => {\n  const path = Paths[pathname];\n\n  if (params === undefined) {\n    return path;\n  }\n\n  const directories = path.split(\"/\");\n\n  const replacedDirectories = directories.map((str) => {\n    const matchOptionalArray = str.match(/\\[\\[\\.\\.\\.(.*?)\\]\\]/);\n    if (matchOptionalArray) {\n      const key = matchOptionalArray[1] as ParamKeys<typeof path>;\n      const param = params[key];\n      return param ? param.join(\"/\") : \"\";\n    }\n\n    const matchArray = str.match(/\\[\\.\\.\\.(.*?)\\]/);\n    if (matchArray) {\n      const key = matchArray[1] as ParamKeys<typeof path>;\n      return params[key].join(\"/\");\n    }\n\n    const match = str.match(/\\[(.*?)\\]/);\n    if (match) {\n      const key = match[0];\n      const trimmed = key.substring(1, key.length - 1) as ParamKeys<\n        typeof path\n      >;\n      return params[trimmed];\n    }\n\n    return str;\n  });\n\n  return \"/\" + replacedDirectories.filter((d) => d !== \"\").join(\"/\");\n};\n\nexport const usePathParams = <\n  T extends PathNames = PathNames,\n  Query extends Record<string, string | string[]> = {}\n>() => {\n  const router = useRouter();\n  const params = router.query as Partial<\n    Record<OptionalArrayParamKeys<typeof Paths[T]>, string[]>\n  > &\n    Record<ArrayParamKeys<typeof Paths[T]>, string[]> &\n    Record<ParamKeys<typeof Paths[T]>, string> &\n    Partial<Query>;\n\n  return params;\n};\n```\n\n# 使い方\nまず、パスを定数として定義した`Paths`を用意します。\nkeyにはページ名を、valueには動的ルーティングをstringで設定します。\n\nパスの生成には`createPath`を使用します。\n`pathname`を指定すると、必要なパラメータをparamsに渡すよう要求されます。\n\n```typescript\n/**\n * 生成されるパス\n * /address/hokkaido/sendai/hakodate\n */\nconst address = createPath({\n  pathname: \"address\",\n  params: { prefecture: \"hokkaido\", cities: [\"sendai\", \"hakodate\"] },\n});\n```\n\n各NextPageでパラメータを取得するときは、`usePathParams`を使用します。\nusePathParamsに`Paths`で定義したページ名を型引数として渡すことで、\n対応したパラメータを取得できます。\n他にクエリなども使用している場合は、型の第２引数にオブジェクトで渡します。\n\n```typescript\n/**\n * prefecture: string;\n * cities: string[];\n * name?: string;\n */\nconst { prefecture, cities } = usePathParams<\"address\", { name: string }>();\n```\n\n# さいごに\nもっと良い書き方やバグ等あれば教えていただけると嬉しいです。\n\n# 参考\nhttps://zenn.dev/panda_program/articles/typescript-nextjs-routing\n","coediting":false,"comments_count":0,"created_at":"2021-10-24T18:02:34+09:00","group":null,"id":"9ca4dbd1cb93936baf47","likes_count":0,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"TypeScript","versions":[]},{"name":"next.js","versions":[]}],"title":"Next.jsのDynamicRoutesに型をつける","updated_at":"2021-10-28T21:57:17+09:00","url":"https://qiita.com/alternacrow/items/9ca4dbd1cb93936baf47","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null},{"rendered_body":"\n<h1>\n<span id=\"はじめに\" class=\"fragment\"></span><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>はじめに</h1>\n\n<p>最近 ReactNative で個人アプリ作っていて、<br>\nArray に shuffle や clone 等の拡張を追加したくなった。<br><br>\nプライベートでは JavaScript で prototype を拡張していたことはあるが、<br>\n業務では使ってこなかったし、TypeScript で書く場合、型周りをどう書くのか良く分からなかったので、<br>\nprototype 拡張 を TypeScript で実際に書いてみた。</p>\n\n<h1>\n<span id=\"リポジトリ\" class=\"fragment\"></span><a href=\"#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA\"><i class=\"fa fa-link\"></i></a>リポジトリ</h1>\n\n<p><qiita-embed-ogp src=\"https://github.com/alternacrow/prototype-with-typescript\"></qiita-embed-ogp></p>\n\n<p>shuffle, clone, unique 等追加してます。</p>\n\n<h1>\n<span id=\"実装例\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E8%A3%85%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>実装例</h1>\n\n<p>Array を任意の長さで分割する <code>chunks</code> というメソッドを追加してみます。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kr\">interface</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">chunks</span><span class=\"p\">(</span><span class=\"na\">size</span><span class=\"p\">:</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">chunks</span> <span class=\"o\">===</span> <span class=\"kc\">undefined</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">chunks</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n    <span class=\"k\">this</span><span class=\"p\">:</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n    <span class=\"nx\">size</span><span class=\"p\">:</span> <span class=\"kr\">number</span>\n  <span class=\"p\">):</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nx\">TypeError</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Array.prototype.chunks called on null or undefined</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">[...</span><span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">ceil</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">/</span> <span class=\"nx\">size</span><span class=\"p\">))].</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">_</span><span class=\"p\">,</span> <span class=\"nx\">index</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">index</span> <span class=\"o\">*</span> <span class=\"nx\">size</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">index</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nx\">size</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>まず、Array が chunks メソッドを持っていることを TypeScript に認識させるために、<br>\nArray の interface に chunks の型を定義します。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"kr\">interface</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">chunks</span><span class=\"p\">(</span><span class=\"na\">size</span><span class=\"p\">:</span> <span class=\"kr\">number</span><span class=\"p\">):</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>型定義はこれだけです。</p>\n\n<p>次は実際に chunks メソッドを実装している箇所を見てみます。</p>\n\n<div class=\"code-frame\" data-lang=\"typescript\"><div class=\"highlight\"><pre><code><span class=\"p\">...</span>\n  <span class=\"nb\">Array</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">.</span><span class=\"nx\">chunks</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n    <span class=\"k\">this</span><span class=\"p\">:</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n    <span class=\"nx\">size</span><span class=\"p\">:</span> <span class=\"kr\">number</span>\n  <span class=\"p\">):</span> <span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nb\">Array</span><span class=\"o\">&lt;</span><span class=\"nx\">T</span><span class=\"o\">&gt;&gt;</span> <span class=\"p\">{</span>\n<span class=\"p\">...</span>\n</code></pre></div></div>\n\n<p>第一引数には Array 自体が、第二引数以降には chunks の引数が入ってきます。<br>\nあとは、破壊的、非破壊的の性質に注意しながら、書いていけば良いかと思います。</p>\n\n<h1>\n<span id=\"おわりに\" class=\"fragment\"></span><a href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>おわりに</h1>\n\n<p>業務では prototype 拡張は使いたくないと思っているんですが、<br>\n良い運用方法とかあればコメントもらえると嬉しいです。</p>\n","body":"# はじめに\n\n最近 ReactNative で個人アプリ作っていて、\nArray に shuffle や clone 等の拡張を追加したくなった。  \nプライベートでは JavaScript で prototype を拡張していたことはあるが、\n業務では使ってこなかったし、TypeScript で書く場合、型周りをどう書くのか良く分からなかったので、\nprototype 拡張 を TypeScript で実際に書いてみた。\n\n# リポジトリ\n\nhttps://github.com/alternacrow/prototype-with-typescript\n\nshuffle, clone, unique 等追加してます。\n\n# 実装例\n\nArray を任意の長さで分割する `chunks` というメソッドを追加してみます。\n\n```typescript\ninterface Array<T> {\n  chunks(size: number): Array<Array<T>>;\n}\n\nif (Array.prototype.chunks === undefined) {\n  Array.prototype.chunks = function <T>(\n    this: Array<T>,\n    size: number\n  ): Array<Array<T>> {\n    if (this == null) {\n      throw new TypeError(\"Array.prototype.chunks called on null or undefined\");\n    }\n\n    return [...Array(Math.ceil(this.length / size))].map((_, index) => {\n      return this.slice(index * size, (index + 1) * size);\n    });\n  };\n}\n```\n\nまず、Array が chunks メソッドを持っていることを TypeScript に認識させるために、\nArray の interface に chunks の型を定義します。\n\n```typescript\ninterface Array<T> {\n  chunks(size: number): Array<Array<T>>;\n}\n```\n\n型定義はこれだけです。\n\n次は実際に chunks メソッドを実装している箇所を見てみます。\n\n```typescript\n...\n  Array.prototype.chunks = function <T>(\n    this: Array<T>,\n    size: number\n  ): Array<Array<T>> {\n...\n```\n\n第一引数には Array 自体が、第二引数以降には chunks の引数が入ってきます。\nあとは、破壊的、非破壊的の性質に注意しながら、書いていけば良いかと思います。\n\n# おわりに\n\n業務では prototype 拡張は使いたくないと思っているんですが、\n良い運用方法とかあればコメントもらえると嬉しいです。\n","coediting":false,"comments_count":0,"created_at":"2021-10-04T07:46:51+09:00","group":null,"id":"5ff1b2d66b33db44b624","likes_count":3,"private":false,"reactions_count":0,"stocks_count":2,"tags":[{"name":"TypeScript","versions":[]},{"name":"prototype","versions":[]}],"title":"prototypeの拡張をTypeScriptで書いてみる","updated_at":"2021-10-27T12:19:59+09:00","url":"https://qiita.com/alternacrow/items/5ff1b2d66b33db44b624","user":{"description":"TypeScript / React Native 好きです。","facebook_id":"","followees_count":3,"followers_count":3,"github_login_name":"alternacrow","id":"alternacrow","items_count":13,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":684679,"profile_image_url":"https://avatars3.githubusercontent.com/u/35155361?v=4","team_only":false,"twitter_screen_name":null,"website_url":""},"page_views_count":null,"team_membership":null}]},"__N_SSG":true}